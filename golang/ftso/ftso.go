package ftso

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// FtsoMetaData contains all meta data concerning the Ftso contract.
var FtsoMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"string\",\"name\":\"_symbol\",\"internalType\":\"string\"},{\"type\":\"address\",\"name\":\"_priceSubmitter\",\"internalType\":\"contractIPriceSubmitter\"},{\"type\":\"address\",\"name\":\"_wNat\",\"internalType\":\"contractIIVPToken\"},{\"type\":\"address\",\"name\":\"_ftsoManager\",\"internalType\":\"contractIIFtsoManager\"},{\"type\":\"uint256\",\"name\":\"_initialPriceUSD\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_priceDeviationThresholdBIPS\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_cyclicBufferSize\",\"internalType\":\"uint256\"}]},{\"type\":\"event\",\"name\":\"LowTurnout\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"epochId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"natTurnout\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"lowNatTurnoutThresholdBIPS\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"timestamp\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PriceEpochInitializedOnFtso\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"epochId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"endTime\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"timestamp\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PriceFinalized\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"epochId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"price\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"bool\",\"name\":\"rewardedFtso\",\"internalType\":\"bool\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"lowRewardPrice\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"highRewardPrice\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint8\",\"name\":\"finalizationType\",\"internalType\":\"enumIFtso.PriceFinalizationType\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"timestamp\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PriceHashSubmitted\",\"inputs\":[{\"type\":\"address\",\"name\":\"submitter\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"epochId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"bytes32\",\"name\":\"hash\",\"internalType\":\"bytes32\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"timestamp\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PriceRevealed\",\"inputs\":[{\"type\":\"address\",\"name\":\"voter\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"epochId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"price\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"random\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"timestamp\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"votePowerNat\",\"internalType\":\"uint256\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"votePowerAsset\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"ASSET_PRICE_USD_DECIMALS\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"activateFtso\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_firstEpochStartTime\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_submitPeriod\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_revealPeriod\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\",\"internalType\":\"bool\"}],\"name\":\"active\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contractIIFtso\"}],\"name\":\"assetFtsos\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contractIIVPToken\"}],\"name\":\"assets\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"averageFinalizePriceEpoch\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"configureEpochs\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_maxVotePowerNatThresholdFraction\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_maxVotePowerAssetThresholdFraction\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_lowAssetUSDThreshold\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_highAssetUSDThreshold\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_highAssetTurnoutThresholdBIPS\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_lowNatTurnoutThresholdBIPS\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"_trustedAddresses\",\"internalType\":\"address[]\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"deactivateFtso\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"_maxVotePowerNatThresholdFraction\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_maxVotePowerAssetThresholdFraction\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_lowAssetUSDThreshold\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_highAssetUSDThreshold\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_highAssetTurnoutThresholdBIPS\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_lowNatTurnoutThresholdBIPS\",\"internalType\":\"uint256\"},{\"type\":\"address[]\",\"name\":\"_trustedAddresses\",\"internalType\":\"address[]\"}],\"name\":\"epochsConfiguration\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"address[]\",\"name\":\"_eligibleAddresses\",\"internalType\":\"address[]\"},{\"type\":\"uint256[]\",\"name\":\"_natWeights\",\"internalType\":\"uint256[]\"},{\"type\":\"uint256\",\"name\":\"_natWeightsSum\",\"internalType\":\"uint256\"}],\"name\":\"finalizePriceEpoch\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"},{\"type\":\"bool\",\"name\":\"_returnRewardData\",\"internalType\":\"bool\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"forceFinalizePriceEpoch\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contractIIFtsoManager\"}],\"name\":\"ftsoManager\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contractIIVPToken\"}],\"name\":\"getAsset\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address[]\",\"name\":\"\",\"internalType\":\"contractIIFtso[]\"}],\"name\":\"getAssetFtsos\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getCurrentEpochId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"_price\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_timestamp\",\"internalType\":\"uint256\"}],\"name\":\"getCurrentPrice\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getCurrentRandom\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getEpochId\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_timestamp\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getEpochPrice\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getEpochPriceForVoter\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"},{\"type\":\"address\",\"name\":\"_voter\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"_firstEpochStartTime\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_submitPeriod\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_revealPeriod\",\"internalType\":\"uint256\"}],\"name\":\"getPriceEpochConfiguration\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_epochSubmitEndTime\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_epochRevealEndTime\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_votePowerBlock\",\"internalType\":\"uint256\"},{\"type\":\"bool\",\"name\":\"_fallbackMode\",\"internalType\":\"bool\"}],\"name\":\"getPriceEpochData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getRandom\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address[]\",\"name\":\"_assets\",\"internalType\":\"contractIIVPToken[]\"},{\"type\":\"uint256[]\",\"name\":\"_assetMultipliers\",\"internalType\":\"uint256[]\"},{\"type\":\"uint256\",\"name\":\"_totalVotePowerNat\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_totalVotePowerAsset\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_assetWeightRatio\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_votePowerBlock\",\"internalType\":\"uint256\"}],\"name\":\"getVoteWeightingParameters\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"initializeCurrentEpochStateForReveal\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_circulatingSupplyNat\",\"internalType\":\"uint256\"},{\"type\":\"bool\",\"name\":\"_fallbackMode\",\"internalType\":\"bool\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"priceDeviationThresholdBIPS\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"priceEpochCyclicBufferSize\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contractIPriceSubmitter\"}],\"name\":\"priceSubmitter\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"revealPriceSubmitter\",\"inputs\":[{\"type\":\"address\",\"name\":\"_voter\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_price\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_random\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_voterWNatVP\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setAsset\",\"inputs\":[{\"type\":\"address\",\"name\":\"_asset\",\"internalType\":\"contractIIVPToken\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setAssetFtsos\",\"inputs\":[{\"type\":\"address[]\",\"name\":\"_assetFtsos\",\"internalType\":\"contractIIFtso[]\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setVotePowerBlock\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_votePowerBlock\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"submitPriceHashSubmitter\",\"inputs\":[{\"type\":\"address\",\"name\":\"_sender\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"},{\"type\":\"bytes32\",\"name\":\"_hash\",\"internalType\":\"bytes32\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"symbol\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"updateInitialPrice\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_initialPriceUSD\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_initialPriceTimestamp\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contractIIVPToken\"}],\"name\":\"wNat\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"wNatVotePowerCached\",\"inputs\":[{\"type\":\"address\",\"name\":\"_owner\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"_epochId\",\"internalType\":\"uint256\"}]}]",
	Bin: "0x608060405234801561001057600080fd5b50600436106102275760003560e01c8063974d7a6b11610130578063d89601fd116100b8578063f025bf661161007c578063f025bf661461088f578063f670ebe314610897578063f72cab28146108bc578063f7dba1f5146108e8578063f937d6ad146109af57610227565b8063d89601fd146107a9578063e3749e0c146107b1578063e3b3a3b31461081c578063e536f39614610851578063eb91d37e1461086e57610227565b8063c5d8b9e7116100ff578063c5d8b9e714610715578063cc245ab514610741578063cd4b691414610749578063cf35bdd014610766578063d0d552dd1461078357610227565b8063974d7a6b146106cb5780639de6f927146106e85780639edbf00714610705578063a29a839f1461070d57610227565b80635303548b116101b35780636b52b242116101825780636b52b2421461054f5780637d1d6f1214610557578063826cc76b146105745780638357d08c1461059157806395d89b411461064e57610227565b80635303548b146104d2578063555989da1461050157806355f7b69b146105095780635c222bad1461054757610227565b806318931c35116101fa57806318931c351461033757806327bd2ad51461038f5780632f0a6f3c146103c1578063306ba253146103ea57806340462a2d1461040d57610227565b806302fb0c5e1461022c57806311a7aaaa14610248578063131fdee21461026c578063144e159114610311575b600080fd5b6102346109b7565b604080519115158252519081900360200190f35b6102506109c0565b604080516001600160a01b039092168252519081900360200190f35b61030f6004803603602081101561028257600080fd5b81019060208101813564010000000081111561029d57600080fd5b8201836020820111156102af57600080fd5b803590602001918460208302840111640100000000831117156102d157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506109e4945050505050565b005b610319610ad9565b60408051938452602084019290925282820152519081900360600190f35b61033f610ae7565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561037b578181015183820152602001610363565b505050509050019250505060405180910390f35b61030f600480360360608110156103a557600080fd5b506001600160a01b038135169060208101359060400135610bae565b61030f600480360360608110156103d757600080fd5b5080359060208101359060400135610c08565b61030f6004803603604081101561040057600080fd5b5080359060200135610d19565b6104326004803603604081101561042357600080fd5b50803590602001351515610ddd565b604051808060200180602001848152602001838103835286818151815260200191508051906020019060200280838360005b8381101561047c578181015183820152602001610464565b50505050905001838103825285818151815260200191508051906020019060200280838360005b838110156104bb5781810151838201526020016104a3565b505050509050019550505050505060405180910390f35b6104ef600480360360208110156104e857600080fd5b5035611094565b60408051918252519081900360200190f35b61030f6110a7565b61030f600480360360a081101561051f57600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608001356110fd565b61025061115b565b6104ef6111db565b6104ef6004803603602081101561056d57600080fd5b50356111e0565b6102506004803603602081101561058a57600080fd5b50356111f5565b61059961121f565b604051808060200180602001878152602001868152602001858152602001848152602001838103835289818151815260200191508051906020019060200280838360005b838110156105f55781810151838201526020016105dd565b50505050905001838103825288818151815260200191508051906020019060200280838360005b8381101561063457818101518382015260200161061c565b505050509050019850505050505050505060405180910390f35b610656611588565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610690578181015183820152602001610678565b50505050905090810190601f1680156106bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61030f600480360360208110156106e157600080fd5b5035611615565b61030f600480360360208110156106fe57600080fd5b503561167c565b6102506116df565b6104ef611703565b6104ef6004803603604081101561072b57600080fd5b50803590602001356001600160a01b031661170e565b6104ef611761565b6104ef6004803603602081101561075f57600080fd5b5035611785565b6102506004803603602081101561077c57600080fd5b503561179a565b61030f6004803603602081101561079957600080fd5b50356001600160a01b03166117aa565b6104ef6118af565b6107b9611915565b6040518088815260200187815260200186815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360008381101561063457818101518382015260200161061c565b6108246119bc565b60408051958652602086019490945284840192909252606084015215156080830152519081900360a00190f35b61030f6004803603602081101561086757600080fd5b5035611a48565b610876611abe565b6040805192835260208301919091528051918290030190f35b6104ef611ac8565b61030f600480360360408110156108ad57600080fd5b50803590602001351515611aec565b6104ef600480360360408110156108d257600080fd5b506001600160a01b038135169060200135611cf3565b61030f600480360360e08110156108fe57600080fd5b81359160208101359160408201359160608101359160808201359160a08101359181019060e0810160c082013564010000000081111561093d57600080fd5b82018360208201111561094f57600080fd5b8035906020019184602083028401116401000000008311171561097157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d3c945050505050565b610250611e72565b60005460ff1681565b7f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e81565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e1614610a1c57610a1c611e96565b6000815111610a2757fe5b600181511180610a5d5750306001600160a01b031681600081518110610a4957fe5b60200260200101516001600160a01b031614155b610a6357fe5b8051610a76906015906020840190614b60565b5080516001600160401b0381118015610a8e57600080fd5b50604051908082528060200260200182016040528015610ab8578160200160208202803683370190505b508051610acd91601491602090910190614b60565b50610ad6611efe565b50565b600654600754600854909192565b6014546060906001148015610afe57506015546001145b8015610b345750306001600160a01b03166015600081548110610b1d57fe5b6000918252602090912001546001600160a01b0316145b610b98576015805480602002602001604051908101604052809291908181526020018280548015610b8e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b70575b5050505050610ba8565b6040805160008152602081019091525b90505b90565b60005460ff16610bc057610bc06120da565b336001600160a01b037f00000000000000000000000010000000000000000000000000000000000000031614610bf857610bf8611e96565b610c03838383612144565b505050565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e1614610c4057610c40611e96565b600054604080518082019091526016815275119514d3c8185b1c9958591e481858dd1a5d985d195960521b60208201529060ff1615610cfd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cc2578181015183820152602001610caa565b50505050905090810190601f168015610cef5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506006929092556007556008556000805460ff19166001179055565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e1614610d5157610d51611e96565b600054604080518082019091526016815275119514d3c8185b1c9958591e481858dd1a5d985d195960521b60208201529060ff1615610dd15760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b50600291909155600355565b6060806000336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e1614610e1a57610e1a611e96565b6000610e25866122cf565b60018101805460ff60f01b19169055600581015490915060009015610e5d57816005015461271083600801540281610e5957fe5b0490505b6001820154600160f81b900460ff1680610e7b575081600401548111155b15610eee576001820154600160f81b900460ff16610edb57600482015460408051838152602081019290925242828201525188917fbece8aa526cdc5e528cdaa56c1d03edc19da51e41845aa146f64a7071f74c65a919081900360600190a25b610ee78783600061240b565b505061108d565b6060806060610efc85612575565b919450925090506060610f0d614bc1565b610f17858561270a565b61012081015191935091507f00000000000000000000000000000000000000000000000000000000000005dc90610f73906004908f907f00000000000000000000000000000000000000000000000000000000000000c8612a28565b1115610f9157610f858c88600061240b565b5050505050505061108d565b60108701805460ff19166001179055610120810151600f88018190556002554260035560008b15610fdb57610fc888838587612ab4565b8251929d50909b50995015610fdb575060015b610fe78d838584612d70565b8c7ffe8865c1fe85bbf124b9e0f16cccfeeb6f330454fd79475a31261c8fa250bc3089600f0154838561014001518661016001518d60100160009054906101000a900460ff164260405180878152602001861515815260200185815260200184815260200183600581111561105857fe5b8152602001828152602001965050505050505060405180910390a2505050600190940180546001600160f81b03169055505050505b9250925092565b60006110a1600483612d76565b92915050565b60005460ff166110b9576110b96120da565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e16146110f1576110f1611e96565b6000805460ff19169055565b60005460ff1661110f5761110f6120da565b336001600160a01b037f0000000000000000000000001000000000000000000000000000000000000003161461114757611147611e96565b6111548585858585612da7565b5050505050565b601454600090600114801561117257506015546001145b80156111a85750306001600160a01b0316601560008154811061119157fe5b6000918252602090912001546001600160a01b0316145b6111b3576000610ba8565b60146000815481106111c157fe5b6000918252602090912001546001600160a01b0316905090565b600581565b60006111eb82613156565b600f015492915050565b6015818154811061120557600080fd5b6000918252602090912001546001600160a01b0316905081565b606080600080600080601480548060200260200160405190810160405280929190818152602001828054801561127e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611260575b50506009548451949a506001600160f01b031694506000939250506001600160401b038211905080156112b057600080fd5b506040519080825280602002602001820160405280156112da578160200160208202803683370190505b509050600087516001600160401b03811180156112f657600080fd5b50604051908082528060200260200182016040528015611320578160200160208202803683370190505b50905060005b88518110156114af5760006001600160a01b031689828151811061134657fe5b60200260200101516001600160a01b031614156113645760006113e8565b88818151811061137057fe5b60200260200101516001600160a01b0316633e5aa26a856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156113bb57600080fd5b505afa1580156113cf573d6000803e3d6000fd5b505050506040513d60208110156113e557600080fd5b50515b8382815181106113f457fe5b6020026020010181815250506015818154811061140d57fe5b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b031663eb91d37e6040518163ffffffff1660e01b8152600401604080518083038186803b15801561146257600080fd5b505afa158015611476573d6000803e3d6000fd5b505050506040513d604081101561148c57600080fd5b5051825183908390811061149c57fe5b6020908102919091010152600101611326565b5060006114bf60048a858561321e565b90506114cd60048a836133c4565b97507f00000000000000000000000002f0826ef6ad107cfc861152b32b52fd11bab9ed6001600160a01b0316633e5aa26a856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561153357600080fd5b505afa158015611547573d6000803e3d6000fd5b505050506040513d602081101561155d57600080fd5b5051965061156e60048a85846134f8565b955061157b6004876135c0565b9450505050909192939495565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561160d5780601f106115e25761010080835404028352916020019161160d565b820191906000526020600020905b8154815290600101906020018083116115f057829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e161461164d5761164d611e96565b6000611658826122cf565b6001808201805460ff60f01b191690559091506116789083908390613615565b5050565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e16146116b4576116b4611e96565b60006116bf826122cf565b6001808201805460ff60f01b19169055909150611678908390839061240b565b7f00000000000000000000000002f0826ef6ad107cfc861152b32b52fd11bab9ed81565b6000610ba842611094565b60008061171a84613156565b9050600061172882856136fd565b90508061173a576000925050506110a1565b600019016000908152600e90910160205260409020546001600160801b0316905092915050565b7f00000000000000000000000000000000000000000000000000000000000005dc81565b600061179082613156565b600a015492915050565b6014818154811061120557600080fd5b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e16146117e2576117e2611e96565b60408051602081019091523081526117fe906015906001614b60565b5060408051602081019091526001600160a01b0382168152611824906014906001614b60565b50806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561185e57600080fd5b505afa158015611872573d6000803e3d6000fd5b505050506040513d602081101561188857600080fd5b50516001600160a01b03909116600090815260056020526040902060ff909116600a0a9055565b6000806118ba611703565b9050806118cb576000915050610bab565b600460007f00000000000000000000000000000000000000000000000000000000000000c86000198401816118fc57fe5b068152602001908152602001600020600a015491505090565b60008060008060008060606004600601546004600701546004600801546004600901546004600a01546004600b01546004600c018080548060200260200160405190810160405280929190818152602001828054801561199e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611980575b50505050509050965096509650965096509650965090919293949596565b60008060008060006119cc611703565b94506119d9600486613755565b6008549094508401925060006004817f00000000000000000000000000000000000000000000000000000000000000c88881611a1157fe5b0681526020810191909152604001600020600101549596949593946001600160f01b03851694600160f81b900460ff169350915050565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e1614611a8057611a80611e96565b438110611a8c57600080fd5b600160f01b8110611a9c57600080fd5b600980546001600160f01b0319166001600160f01b0392909216919091179055565b6002546003549091565b7f00000000000000000000000000000000000000000000000000000000000000c881565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e1614611b2457611b24611e96565b6000611b2e611703565b905060006004817f00000000000000000000000000000000000000000000000000000000000000c88481611b5e57fe5b0681526020810191909152604001600090812060108101805460ff1916905560088101829055600a8101829055600d81019190915560095460018201805486158015600160f81b026001600160f81b036001600160f01b03199093166001600160f01b03909516949094179190911692909217905560028201849055909150611be8575050611678565b606080611bf361376d565b6009549194509250611ca3915084908890611c38907f00000000000000000000000002f0826ef6ad107cfc861152b32b52fd11bab9ed906001600160f01b0316613963565b6014805480602002602001604051908101604052809291908181526020018280548015611c8e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c70575b5060049796959493508a9250899150506139f4565b6013849055837fc0eaa359541c7c642d9947c9496507c134f3e4f8e1fd433313eb27dc48cb1fb7611cd5600483613755565b604080519182524260208301528051918290030190a2505050505050565b6000611d357f00000000000000000000000002f0826ef6ad107cfc861152b32b52fd11bab9ed84611d2385613156565b600101546001600160f01b0316613aa0565b9392505050565b336001600160a01b037f000000000000000000000000bfa12e4e1411b62eda8b035d71735667422a6a9e1614611d7457611d74611e96565b600a879055600b869055600c859055600d849055600e839055600f82905560105460005b81811015611df55760006004600d0160006004600c018481548110611db957fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101611d98565b5050805160005b81811015611e535760016004600d016000858481518110611e1957fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101611dfc565b508151611e67906010906020850190614b60565b505050505050505050565b7f000000000000000000000000100000000000000000000000000000000000000381565b604080518082018252600d81526c1058d8d95cdcc819195b9a5959609a1b6020808301918252925162461bcd60e51b81526004810193845282516024820152825192939283926044909201919080838360008315610cc2578181015183820152602001610caa565b6015546001148015611f3a5750306001600160a01b03166015600081548110611f2357fe5b6000918252602090912001546001600160a01b0316145b15611f44576120d8565b60005b601554811015610ad657600060158281548110611f6057fe5b6000918252602091829020015460408051635c222bad60e01b815290516001600160a01b0390921692635c222bad92600480840193829003018186803b158015611fa957600080fd5b505afa158015611fbd573d6000803e3d6000fd5b505050506040513d6020811015611fd357600080fd5b5051601480549192509083908110611fe757fe5b6000918252602090912001546001600160a01b038281169116141561200c57506120d0565b806014838154811061201a57fe5b600091825260209091200180546001600160a01b0319166001600160a01b039283161790558116156120ce57806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561207f57600080fd5b505afa158015612093573d6000803e3d6000fd5b505050506040513d60208110156120a957600080fd5b50516001600160a01b038216600090815260056020526040902060ff909116600a0a90555b505b600101611f47565b565b604080518082018252600f81526e4654534f206e6f742061637469766560881b6020808301918252925162461bcd60e51b81526004810193845282516024820152825192939283926044909201919080838360008315610cc2578181015183820152602001610caa565b61214c611703565b82146040518060400160405280600e81526020016d15dc9bdb99c8195c1bd8da081a5960921b815250906121c15760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b5060008281526012602090815260408083206001600160a01b0387168452825291829020548251808401909352601983527f4475706c6963617465207375626d697420696e2065706f63680000000000000091830191909152156122665760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b5060008281526012602090815260408083206001600160a01b038716808552908352928190208490558051848152429281019290925280518593927f615c0184a2b16dbbcd09eae0bf239e28977aa4e6ff2204eda59c14016310bb6692908290030190a3505050565b60006122dc600483613b43565b4210156040518060400160405280602081526020017f45706f6368206e6f7420726561647920666f722066696e616c697a6174696f6e815250906123615760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b5061236b82613156565b90506000601082015460ff16600581111561238257fe5b146040518060400160405280601781526020017f45706f636820616c72656164792066696e616c697a6564000000000000000000815250906124055760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b50919050565b600080612475846004600c0180548060200260200160405190810160405280929190818152602001828054801561246b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161244d575b5050505050613b5c565b9092509050801561256a5780828161248957fe5b04600f8501558261249b57600261249e565b60045b60108501805460ff191660018360058111156124b657fe5b0217905550600f840154600255426003556124d085610ad6565b847ffe8865c1fe85bbf124b9e0f16cccfeeb6f330454fd79475a31261c8fa250bc3085600f015460008060008960100160009054906101000a900460ff164260405180878152602001861515815260200185815260200184815260200183600581111561253957fe5b8152602001828152602001965050505050505060405180910390a26001840180546001600160f81b03169055611154565b611154858585613615565b6060806060600084600d01549050806001600160401b038111801561259957600080fd5b506040519080825280602002602001820160405280156125c3578160200160208202803683370190505b509350806001600160401b03811180156125dc57600080fd5b50604051908082528060200260200182016040528015612606578160200160208202803683370190505b5091506000816001600160401b038111801561262157600080fd5b5060405190808252806020026020018201604052801561264b578160200160208202803683370190505b50905060005b828110156126f3576000818152600e880160205260409020805487516001600160801b039091169088908490811061268557fe5b602090810291909101015280548551600160801b9091046001600160401b0316908690849081106126b257fe5b602090810291909101015280548351600160c01b9091046001600160401b0316908490849081106126df57fe5b602090810291909101015250600101612651565b506126ff868483613c07565b935050509193909250565b6060612714614bc1565b8351806001600160401b038111801561272c57600080fd5b50604051908082528060200260200182016040528015612756578160200160208202803683370190505b50925060005b81811015612784578084828151811061277157fe5b602090810291909101015260010161275c565b5061279b6002600060018403600080888b8b613d1e565b6080850152606084015280835283518591859181106127b657fe5b6020026020010151815181106127c857fe5b602090810291909101015160a0830181905260808301516060840151845192010190612801578251600060c08501526020840152612855565b60048104836060015111612825578251606084015160c08501526020840152612855565b61284960016000600186600001510360008760a00151886080015101898c8c613d1e565b5060c085015260208401525b825160001983011415612876578251600061010085015260408401526128ce565b6004810483608001511161289b578251608084015161010085015260408401526128ce565b6128c160038460000151600101600185038660a001518760600151016000898c8c613d1e565b6101008601525060408401525b85848460000151815181106128df57fe5b6020026020010151815181106128f157fe5b6020908102919091010151610120840152600281048360a0015184606001510114801561291f575060028106155b1561294f576002612939846000015160018503878a613ff9565b846101200151018161294757fe5b046101208401525b612969836020015160006000198660c00151888b8b6140b9565b60c0850152602084015260408301516101008401516129949190600019850190600190888b8b6140b9565b6101008501526040840152602083015184518791869181106129b257fe5b6020026020010151815181106129c457fe5b60200260200101518361014001818152505085848460400151815181106129e757fe5b6020026020010151815181106129f957fe5b602090810291909101015161016084015261010083015160c08401519091030360e08301525090939092509050565b600083612a3757506000612aac565b6000858184600019880181612a4857fe5b068152602001908152602001600020600f0154905080841415612a6f576000915050612aac565b83612a825764e8d4a51000915050612aac565b600084821115612a955750838103612a9a565b508084035b612aa7816127108761418d565b925050505b949350505050565b600a840154602084015160609182916000919082905b88604001518111612b95576000888281518110612ae357fe5b602002602001015190506000888281518110612afb57fe5b60200260200101511115612b8b576000818152600e8c0160205260409020546101408b01516001600160801b0390911690811480612b4657508a6101600151816001600160801b0316145b8015612b7757506000828152600e8d016020526040902060010154612b759086906001600160a01b0316614299565b155b15612b83575050612b8d565b506001909201915b505b600101612aca565b50806001600160401b0381118015612bac57600080fd5b50604051908082528060200260200182016040528015612bd6578160200160208202803683370190505b509450806001600160401b0381118015612bef57600080fd5b50604051908082528060200260200182016040528015612c19578160200160208202803683370190505b5060208901519094506000905b89604001518111612d62576000898281518110612c3f57fe5b602002602001015190506000898281518110612c5757fe5b602002602001015190506000811115612d57576000828152600e8e0160205260409020546101408d01516001600160801b0390911690811480612ca757508c6101600151816001600160801b0316145b8015612cd857506000838152600e8f016020526040902060010154612cd69088906001600160a01b0316614299565b155b15612ce557505050612d5a565b6000838152600e8f0160205260409020600101548a516001600160a01b03909116908b9087908110612d1357fe5b60200260200101906001600160a01b031690816001600160a01b03168152505081898681518110612d4057fe5b602090810291909101015250958601956001909301925b50505b600101612c26565b505050509450945094915050565b50505050565b60008260020154821015612d8c575060006110a1565b82600301548360020154830381612d9f57fe5b0490506110a1565b60408051808201909152600e81526d0a0e4d2c6ca40e8dede40d0d2ced60931b6020820152600160801b8410612e1e5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b50612e2a6004856142d4565b6040518060400160405280601881526020017f52657665616c20706572696f64206e6f7420616374697665000000000000000081525090612eac5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b506040805160208082018690528183018590526001600160a01b0388166060808401829052845180850390910181526080840180865281519184019190912060008a81526012855286812093815292909352908490205460e08401909452602380825293909114929091614d2d9060a0013990612f6a5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b5060006004817f00000000000000000000000000000000000000000000000000000000000000c88781612f9957fe5b0681526020810191909152604001600020600181015490915060ff600160f81b8204811691600160f01b8104909116906001600160f01b03168180612ffe5750828015612ffe57506001600160a01b03891660009081526011602052604090205460ff165b6040518060400160405280602081526020017f45706f6368206e6f7420696e697469616c697a656420666f722072657665616c815250906130805760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b50600080613091868c8988876142ff565b915091506130d4868c84848d8d8f60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012060001c61435f565b60008a81526012602090815260408083206001600160a01b038f168085529083528184209390935580518c81529182018b905242828201526060820185905260808201849052518c92917f408bc8c9d02102257c33373c2df5771b03067bd8ea7ec60c35f314ec4ee99d05919081900360a00190a35050505050505050505050565b60006004817f00000000000000000000000000000000000000000000000000000000000000c8848161318457fe5b0681526020019081526020016000209050806002015482146040518060400160405280601881526020017f45706f63682064617461206e6f7420617661696c61626c650000000000000000815250906124055760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cc2578181015183820152602001610caa565b82516060906000816001600160401b038111801561323b57600080fd5b50604051908082528060200260200182016040528015613265578160200160208202803683370190505b5090506000805b8381101561334e5760006001600160a01b031688828151811061328b57fe5b60200260200101516001600160a01b031614156132a757613346565b600061331e8783815181106132b857fe5b60200260200101518b60010160008c86815181106132d257fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548a858151811061330757fe5b602002602001015161418d9092919063ffffffff16565b90508084838151811061332d57fe5b6020908102919091010152613342838261447c565b9250505b60010161326c565b5080156133b95760005b838110156133b75761339861338b61271088848151811061337557fe5b60200260200101516144d690919063ffffffff16565b8385848151811061330757fe5b8382815181106133a457fe5b6020908102919091010152600101613358565b505b509695505050505050565b8151606090806001600160401b03811180156133df57600080fd5b50604051908082528060200260200182016040528015613409578160200160208202803683370190505b50915060005b818110156134ef5760006001600160a01b031685828151811061342e57fe5b60200260200101516001600160a01b0316146134cc57600086600101600087848151811061345857fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205490506134ae61271064e8d4a510008161349657fe5b04670de0b6b3a7640000028287858151811061330757fe5b8483815181106134ba57fe5b602002602001018181525050506134e7565b60008382815181106134da57fe5b6020026020010181815250505b60010161340f565b50509392505050565b600080805b85518110156135b65760006001600160a01b031686828151811061351d57fe5b60200260200101516001600160a01b0316146135ae57600061271061359687848151811061354757fe5b60200260200101518a60010160008b878151811061356157fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205488868151811061330757fe5b8161359d57fe5b0490506135aa838261447c565b9250505b6001016134fd565b5095945050505050565b60008083600801548310156135d757506000611d35565b836009015483106135eb5750611388611d35565b600884015460098501546101f49190819003908503611194028161360b57fe5b0401949350505050565b821561362857600254600f830155613630565b6000600f8301555b8061363c57600361363f565b60055b60108301805460ff1916600183600581111561365757fe5b021790555061366583610ad6565b827ffe8865c1fe85bbf124b9e0f16cccfeeb6f330454fd79475a31261c8fa250bc3083600f015460008060008760100160009054906101000a900460ff16426040518087815260200186151581526020018581526020018481526020018360058111156136ce57fe5b8152602001828152602001965050505050505060405180910390a25060010180546001600160f81b0316905550565b600d820154600090815b8181101561374a576000818152600e860160205260409020600101546001600160a01b03858116911614156137425760010191506110a19050565b600101613707565b506000949350505050565b60038201546002830154600183019091020192915050565b606080606061377a611efe565b60148054806020026020016040519081016040528092919081815260200182805480156137d057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116137b2575b5050505050925082516001600160401b03811180156137ee57600080fd5b50604051908082528060200260200182016040528015613818578160200160208202803683370190505b50915082516001600160401b038111801561383257600080fd5b5060405190808252806020026020018201604052801561385c578160200160208202803683370190505b50905060005b835181101561395d5761389684828151811061387a57fe5b60209081029190910101516009546001600160f01b0316613963565b8382815181106138a257fe5b602002602001018181525050601581815481106138bb57fe5b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b031663eb91d37e6040518163ffffffff1660e01b8152600401604080518083038186803b15801561391057600080fd5b505afa158015613924573d6000803e3d6000fd5b505050506040513d604081101561393a57600080fd5b5051825183908390811061394a57fe5b6020908102919091010152600101613862565b50909192565b60006001600160a01b03831661397b575060006110a1565b826001600160a01b031663caeb942b836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156139c157600080fd5b505af11580156139d5573d6000803e3d6000fd5b505050506040513d60208110156139eb57600080fd5b505190506110a1565b613a01878785858561452f565b600a8701546003870155600b8701546004870155600586018590556006808701859055870154613a39908581613a3357fe5b04614598565b86546001600160801b0319166001600160801b039190911617865560078781015490870154613a6a919081613a3357fe5b86546001600160801b03918216600160801b0291161786555050506001909201805460ff60f01b1916600160f01b179055505050565b60006001600160a01b038416613ab857506000611d35565b836001600160a01b031663e587497e84846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613b0f57600080fd5b505af1158015613b23573d6000803e3d6000fd5b505050506040513d6020811015613b3957600080fd5b5051949350505050565b60008260040154613b548484613755565b019392505050565b600d8201546000908190815b81811015613bfe576000818152600e870160205260408120600101546001600160a01b0316905b8651811015613bf457868181518110613ba457fe5b60200260200101516001600160a01b0316826001600160a01b03161415613bec576000838152600e890160205260409020546001600160801b03169590950194600194909401935b600101613b8f565b5050600101613b68565b50509250929050565b600d830154606090806001600160401b0381118015613c2557600080fd5b50604051908082528060200260200182016040528015613c4f578160200160208202803683370190505b5091506000613c5d856145e0565b90506000613c6a856145e0565b9050600080613c7a898585614625565b90508315613c8a57806127100391505b60005b85811015613d115760008315613cd357613cd08a8381518110613cac57fe5b602002602001015164e8d4a510000261271088028661418d9092919063ffffffff16565b90505b60008315613ced57613cea8a8481518110613cac57fe5b90505b808201898481518110613cfc57fe5b60209081029190910101525050600101613c8d565b5050505050509392505050565b6000806000888a1415613d38575088915086905085613feb565b613d40614c22565b88815260208101889052613d52614c5f565b60208082018d905260408083018d90528051448184015242818301528151808203830181526060909101909152805191012060005b60208301516040840151613db99190816001818303018681613da557fe5b0601876000015188602001518f8f8f61468c565b606087015260408601528084528a518b91908110613dd357fe5b602002602001015183606001818152505087836060015181518110613df457fe5b6020026020010151846080018181525050836060015184604001518560800151010190508e60021415613ecf5760028106600282040160a0850181905280820360c0860152604085015110801590613e4f57508b8460a00151115b15613e7457825160001901604084015260608401516080850151016020850152613eca565b8360c001518460600151118015613e8e57508a8460c00151115b15613eaf578251600101602084015260408401516080850151018452613eca565b50505160408201516060909201519094509092509050613feb565b613fe6565b8e60011415613f60576004810460a0850181905280820360c08601526040850151118015613f0057508b8460a00151115b15613f2557825160001901604084015260608401516080850151016020850152613eca565b8360c00151846060015110158015613e8e57508a8460c001511115613eaf578251600101602084015260408401516080850151018452613eca565b6004810460c08501819052810360a08501819052604085015110801590613f8a57508b8460a00151115b15613faf57825160001901604084015260608401516080850151016020850152613fe6565b8360c001518460600151118015613fc957508a8460c00151115b15613eaf5782516001016020840152604084015160808501510184525b613d87565b985098509895505050505050565b600083851415614031578183868151811061401057fe5b60200260200101518151811061402257fe5b60200260200101519050612aac565b60008284876001018151811061404357fe5b60200260200101518151811061405557fe5b602002602001015190506000808760020190505b8681116140ad578486828151811061407d57fe5b60200260200101518151811061408f57fe5b60200260200101519150828210156140a5578192505b600101614069565b50909695505050505050565b60008085888a03880282136140d45789879250925050614181565b600085878c815181106140e357fe5b6020026020010151815181106140f557fe5b602090810291909101015190508a89016000815b60008c8e830302136141755789818151811061412157fe5b602002602001015191508389838151811061413857fe5b6020026020010151141561416e5787828151811061415257fe5b60200260200101518503945061416983828c614855565b918b01915b8b01614109565b50508990039350909150505b97509795505050505050565b60008082116141d6576040805162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b604482015290519081900360640190fd5b836141e357506000611d35565b838302838582816141f057fe5b0414156142095782818161420057fe5b04915050611d35565b600083868161421457fe5b049050600084878161422257fe5b069050600085878161423057fe5b049050600086888161423e57fe5b06905061428c6142588861425286856144d6565b906148bd565b61428661426586866144d6565b61428661427289876144d6565b6142868d6142808c8b6144d6565b906144d6565b9061447c565b9998505050505050505050565b604080516020808201949094526001600160a01b03929092168282015280518083038201815260609092019052805191012060019081161490565b6000806142e18484613755565b9050428111158015612aac5750836004015481014210949350505050565b600080831561431357506000905080614355565b849150614321878785614924565b87549091506001600160801b0380821691600160801b90041681841115614346578193505b80831115614352578092505b50505b9550959350505050565b600086600d0154905060006143808787878b600601548c60070154896149e2565b63ffffffff838116608083019081526000858152600e8c0160209081526040918290208551815492870151938701516001600160801b03199093166001600160801b039091161767ffffffffffffffff60801b1916600160801b6001600160401b0394851602176001600160c01b0316600160c01b939092169290920217815560608401516001918201805493516001600160a01b03199094166001600160a01b039092169190911763ffffffff60a01b1916600160a01b93851693909302929092179091558401600d8b015560088a01549192506144629190889061447c16565b60088901555050600a909501805490950190945550505050565b600082820183811015611d35576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000826144e5575060006110a1565b828202828482816144f257fe5b0414611d355760405162461bcd60e51b8152600401808060200182810382526021815260200180614d506021913960400191505060405180910390fd5b825161454490600b8601906020860190614b60565b506145518584848461321e565b805161456791600c870191602090910190614c87565b506000614575868685614a3f565b60078601819055905061458886826135c0565b8560090181905550505050505050565b6000600160801b82106145dc5760405162461bcd60e51b8152600401808060200182810382526027815260200180614d066027913960400191505060405180910390fd5b5090565b600080805b835181101561461e576146148482815181106145fd57fe5b60200260200101518361447c90919063ffffffff16565b91506001016145e5565b5092915050565b60008161463457506000611d35565b826146425750612710611d35565b60006146568361271064e8d4a5100061418d565b90508460030154811061466f5750506009830154611d35565b6003850154600986015461468491839061418d565b915050611d35565b60008060008085878b8151811061469f57fe5b6020026020010151815181106146b157fe5b60200260200101519050600060026001600160401b03811180156146d457600080fd5b506040519080825280602002602001820160405280156146fe578160200160208202803683370190505b509050898160008151811061470f57fe5b602002602001018181525050888160018151811061472957fe5b60209081029190910101528c8c6147418d828c614855565b81805b828110156148055760008c828151811061475a57fe5b60200260200101519050868c828151811061477157fe5b602002602001015110156147c8578a818151811061478b57fe5b6020026020010151866000815181106147a057fe5b6020026020010181815101915081815250506147bd83838f614855565b6001909201916147fc565b8a81815181106147d457fe5b6020026020010151866001815181106147e957fe5b6020026020010181815101915081815250505b50600101614744565b5061481182828d614855565b808460008151811061481f57fe5b60200260200101518560018151811061483457fe5b60200260200101519750975097505050505050985098509895505050505050565b8183141561486257610c03565b80828151811061486e57fe5b602002602001015181848151811061488257fe5b602002602001015182858151811061489657fe5b602002602001018385815181106148a957fe5b602090810291909101019190915252505050565b6000808211614913576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161491c57fe5b049392505050565b600b83015460009081906001600160401b038111801561494357600080fd5b5060405190808252806020026020018201604052801561496d578160200160208202803683370190505b50905060005b600b8601548110156149cc576149ad86600b01828154811061499157fe5b6000918252602090912001546001600160a01b03168686613aa0565b8282815181106149b957fe5b6020908102919091010152600101614973565b506149d960048683614a3f565b95945050505050565b6149ea614cc2565b6001600160a01b0387166060820152614a038685614b2f565b6001600160401b03166020820152614a1b8584614b2f565b6001600160401b031660408201526001600160801b03909116815295945050505050565b600080805b600b850154811015614b265760006001600160a01b031685600b018281548110614a6a57fe5b6000918252602090912001546001600160a01b03161415614a8a57614b1e565b614b1b612710614b0b868481518110614a9f57fe5b60200260200101518960010160008a600b018781548110614abc57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054600c8a01805487908110614af157fe5b906000526020600020015461418d9092919063ffffffff16565b81614b1257fe5b8491900461447c565b91505b600101614a44565b50949350505050565b6000811580614b3c575082155b15614b49575060006110a1565b614b598364e8d4a510008461418d565b90506110a1565b828054828255906000526020600020908101928215614bb5579160200282015b82811115614bb557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614b80565b506145dc929150614cf0565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b828054828255906000526020600020908101928215614bb5579160200282015b82811115614bb5578251825591602001919060010190614ca7565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b5b808211156145dc5760008155600101614cf156fe53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473507269636520616c72656164792072657665616c6564206f72206e6f742076616c6964536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212206abbc057beb7e88e14da4471adff41c5166c6aa382754ead6b2806155764308e64736f6c63430007060033",
}

// FtsoABI is the input ABI used to generate the binding from.
// Deprecated: Use FtsoMetaData.ABI instead.
var FtsoABI = FtsoMetaData.ABI

// FtsoBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use FtsoMetaData.Bin instead.
var FtsoBin = FtsoMetaData.Bin

// DeployFtso deploys a new Ethereum contract, binding an instance of Ftso to it.
func DeployFtso(auth *bind.TransactOpts, backend bind.ContractBackend, _symbol string, _priceSubmitter common.Address, _wNat common.Address, _ftsoManager common.Address, _initialPriceUSD *big.Int, _priceDeviationThresholdBIPS *big.Int, _cyclicBufferSize *big.Int) (common.Address, *types.Transaction, *Ftso, error) {
	parsed, err := FtsoMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(FtsoBin), backend, _symbol, _priceSubmitter, _wNat, _ftsoManager, _initialPriceUSD, _priceDeviationThresholdBIPS, _cyclicBufferSize)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Ftso{FtsoCaller: FtsoCaller{contract: contract}, FtsoTransactor: FtsoTransactor{contract: contract}, FtsoFilterer: FtsoFilterer{contract: contract}}, nil
}

// Ftso is an auto generated Go binding around an Ethereum contract.
type Ftso struct {
	FtsoCaller     // Read-only binding to the contract
	FtsoTransactor // Write-only binding to the contract
	FtsoFilterer   // Log filterer for contract events
}

// FtsoCaller is an auto generated read-only Go binding around an Ethereum contract.
type FtsoCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FtsoTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FtsoTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FtsoFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FtsoFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FtsoSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FtsoSession struct {
	Contract     *Ftso             // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// FtsoCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FtsoCallerSession struct {
	Contract *FtsoCaller   // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// FtsoTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FtsoTransactorSession struct {
	Contract     *FtsoTransactor   // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// FtsoRaw is an auto generated low-level Go binding around an Ethereum contract.
type FtsoRaw struct {
	Contract *Ftso // Generic contract binding to access the raw methods on
}

// FtsoCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FtsoCallerRaw struct {
	Contract *FtsoCaller // Generic read-only contract binding to access the raw methods on
}

// FtsoTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FtsoTransactorRaw struct {
	Contract *FtsoTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFtso creates a new instance of Ftso, bound to a specific deployed contract.
func NewFtso(address common.Address, backend bind.ContractBackend) (*Ftso, error) {
	contract, err := bindFtso(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Ftso{FtsoCaller: FtsoCaller{contract: contract}, FtsoTransactor: FtsoTransactor{contract: contract}, FtsoFilterer: FtsoFilterer{contract: contract}}, nil
}

// NewFtsoCaller creates a new read-only instance of Ftso, bound to a specific deployed contract.
func NewFtsoCaller(address common.Address, caller bind.ContractCaller) (*FtsoCaller, error) {
	contract, err := bindFtso(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FtsoCaller{contract: contract}, nil
}

// NewFtsoTransactor creates a new write-only instance of Ftso, bound to a specific deployed contract.
func NewFtsoTransactor(address common.Address, transactor bind.ContractTransactor) (*FtsoTransactor, error) {
	contract, err := bindFtso(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FtsoTransactor{contract: contract}, nil
}

// NewFtsoFilterer creates a new log filterer instance of Ftso, bound to a specific deployed contract.
func NewFtsoFilterer(address common.Address, filterer bind.ContractFilterer) (*FtsoFilterer, error) {
	contract, err := bindFtso(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FtsoFilterer{contract: contract}, nil
}

// bindFtso binds a generic wrapper to an already deployed contract.
func bindFtso(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(FtsoABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Ftso *FtsoRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Ftso.Contract.FtsoCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Ftso *FtsoRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ftso.Contract.FtsoTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Ftso *FtsoRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Ftso.Contract.FtsoTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Ftso *FtsoCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Ftso.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Ftso *FtsoTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ftso.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Ftso *FtsoTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Ftso.Contract.contract.Transact(opts, method, params...)
}

// ASSETPRICEUSDDECIMALS is a free data retrieval call binding the contract method 0x6b52b242.
//
// Solidity: function ASSET_PRICE_USD_DECIMALS() view returns(uint256)
func (_Ftso *FtsoCaller) ASSETPRICEUSDDECIMALS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "ASSET_PRICE_USD_DECIMALS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ASSETPRICEUSDDECIMALS is a free data retrieval call binding the contract method 0x6b52b242.
//
// Solidity: function ASSET_PRICE_USD_DECIMALS() view returns(uint256)
func (_Ftso *FtsoSession) ASSETPRICEUSDDECIMALS() (*big.Int, error) {
	return _Ftso.Contract.ASSETPRICEUSDDECIMALS(&_Ftso.CallOpts)
}

// ASSETPRICEUSDDECIMALS is a free data retrieval call binding the contract method 0x6b52b242.
//
// Solidity: function ASSET_PRICE_USD_DECIMALS() view returns(uint256)
func (_Ftso *FtsoCallerSession) ASSETPRICEUSDDECIMALS() (*big.Int, error) {
	return _Ftso.Contract.ASSETPRICEUSDDECIMALS(&_Ftso.CallOpts)
}

// Active is a free data retrieval call binding the contract method 0x02fb0c5e.
//
// Solidity: function active() view returns(bool)
func (_Ftso *FtsoCaller) Active(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "active")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Active is a free data retrieval call binding the contract method 0x02fb0c5e.
//
// Solidity: function active() view returns(bool)
func (_Ftso *FtsoSession) Active() (bool, error) {
	return _Ftso.Contract.Active(&_Ftso.CallOpts)
}

// Active is a free data retrieval call binding the contract method 0x02fb0c5e.
//
// Solidity: function active() view returns(bool)
func (_Ftso *FtsoCallerSession) Active() (bool, error) {
	return _Ftso.Contract.Active(&_Ftso.CallOpts)
}

// AssetFtsos is a free data retrieval call binding the contract method 0x826cc76b.
//
// Solidity: function assetFtsos(uint256 ) view returns(address)
func (_Ftso *FtsoCaller) AssetFtsos(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "assetFtsos", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AssetFtsos is a free data retrieval call binding the contract method 0x826cc76b.
//
// Solidity: function assetFtsos(uint256 ) view returns(address)
func (_Ftso *FtsoSession) AssetFtsos(arg0 *big.Int) (common.Address, error) {
	return _Ftso.Contract.AssetFtsos(&_Ftso.CallOpts, arg0)
}

// AssetFtsos is a free data retrieval call binding the contract method 0x826cc76b.
//
// Solidity: function assetFtsos(uint256 ) view returns(address)
func (_Ftso *FtsoCallerSession) AssetFtsos(arg0 *big.Int) (common.Address, error) {
	return _Ftso.Contract.AssetFtsos(&_Ftso.CallOpts, arg0)
}

// Assets is a free data retrieval call binding the contract method 0xcf35bdd0.
//
// Solidity: function assets(uint256 ) view returns(address)
func (_Ftso *FtsoCaller) Assets(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "assets", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Assets is a free data retrieval call binding the contract method 0xcf35bdd0.
//
// Solidity: function assets(uint256 ) view returns(address)
func (_Ftso *FtsoSession) Assets(arg0 *big.Int) (common.Address, error) {
	return _Ftso.Contract.Assets(&_Ftso.CallOpts, arg0)
}

// Assets is a free data retrieval call binding the contract method 0xcf35bdd0.
//
// Solidity: function assets(uint256 ) view returns(address)
func (_Ftso *FtsoCallerSession) Assets(arg0 *big.Int) (common.Address, error) {
	return _Ftso.Contract.Assets(&_Ftso.CallOpts, arg0)
}

// EpochsConfiguration is a free data retrieval call binding the contract method 0xe3749e0c.
//
// Solidity: function epochsConfiguration() view returns(uint256 _maxVotePowerNatThresholdFraction, uint256 _maxVotePowerAssetThresholdFraction, uint256 _lowAssetUSDThreshold, uint256 _highAssetUSDThreshold, uint256 _highAssetTurnoutThresholdBIPS, uint256 _lowNatTurnoutThresholdBIPS, address[] _trustedAddresses)
func (_Ftso *FtsoCaller) EpochsConfiguration(opts *bind.CallOpts) (struct {
	MaxVotePowerNatThresholdFraction   *big.Int
	MaxVotePowerAssetThresholdFraction *big.Int
	LowAssetUSDThreshold               *big.Int
	HighAssetUSDThreshold              *big.Int
	HighAssetTurnoutThresholdBIPS      *big.Int
	LowNatTurnoutThresholdBIPS         *big.Int
	TrustedAddresses                   []common.Address
}, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "epochsConfiguration")

	outstruct := new(struct {
		MaxVotePowerNatThresholdFraction   *big.Int
		MaxVotePowerAssetThresholdFraction *big.Int
		LowAssetUSDThreshold               *big.Int
		HighAssetUSDThreshold              *big.Int
		HighAssetTurnoutThresholdBIPS      *big.Int
		LowNatTurnoutThresholdBIPS         *big.Int
		TrustedAddresses                   []common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.MaxVotePowerNatThresholdFraction = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.MaxVotePowerAssetThresholdFraction = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.LowAssetUSDThreshold = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.HighAssetUSDThreshold = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.HighAssetTurnoutThresholdBIPS = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.LowNatTurnoutThresholdBIPS = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.TrustedAddresses = *abi.ConvertType(out[6], new([]common.Address)).(*[]common.Address)

	return *outstruct, err

}

// EpochsConfiguration is a free data retrieval call binding the contract method 0xe3749e0c.
//
// Solidity: function epochsConfiguration() view returns(uint256 _maxVotePowerNatThresholdFraction, uint256 _maxVotePowerAssetThresholdFraction, uint256 _lowAssetUSDThreshold, uint256 _highAssetUSDThreshold, uint256 _highAssetTurnoutThresholdBIPS, uint256 _lowNatTurnoutThresholdBIPS, address[] _trustedAddresses)
func (_Ftso *FtsoSession) EpochsConfiguration() (struct {
	MaxVotePowerNatThresholdFraction   *big.Int
	MaxVotePowerAssetThresholdFraction *big.Int
	LowAssetUSDThreshold               *big.Int
	HighAssetUSDThreshold              *big.Int
	HighAssetTurnoutThresholdBIPS      *big.Int
	LowNatTurnoutThresholdBIPS         *big.Int
	TrustedAddresses                   []common.Address
}, error) {
	return _Ftso.Contract.EpochsConfiguration(&_Ftso.CallOpts)
}

// EpochsConfiguration is a free data retrieval call binding the contract method 0xe3749e0c.
//
// Solidity: function epochsConfiguration() view returns(uint256 _maxVotePowerNatThresholdFraction, uint256 _maxVotePowerAssetThresholdFraction, uint256 _lowAssetUSDThreshold, uint256 _highAssetUSDThreshold, uint256 _highAssetTurnoutThresholdBIPS, uint256 _lowNatTurnoutThresholdBIPS, address[] _trustedAddresses)
func (_Ftso *FtsoCallerSession) EpochsConfiguration() (struct {
	MaxVotePowerNatThresholdFraction   *big.Int
	MaxVotePowerAssetThresholdFraction *big.Int
	LowAssetUSDThreshold               *big.Int
	HighAssetUSDThreshold              *big.Int
	HighAssetTurnoutThresholdBIPS      *big.Int
	LowNatTurnoutThresholdBIPS         *big.Int
	TrustedAddresses                   []common.Address
}, error) {
	return _Ftso.Contract.EpochsConfiguration(&_Ftso.CallOpts)
}

// FtsoManager is a free data retrieval call binding the contract method 0x11a7aaaa.
//
// Solidity: function ftsoManager() view returns(address)
func (_Ftso *FtsoCaller) FtsoManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "ftsoManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// FtsoManager is a free data retrieval call binding the contract method 0x11a7aaaa.
//
// Solidity: function ftsoManager() view returns(address)
func (_Ftso *FtsoSession) FtsoManager() (common.Address, error) {
	return _Ftso.Contract.FtsoManager(&_Ftso.CallOpts)
}

// FtsoManager is a free data retrieval call binding the contract method 0x11a7aaaa.
//
// Solidity: function ftsoManager() view returns(address)
func (_Ftso *FtsoCallerSession) FtsoManager() (common.Address, error) {
	return _Ftso.Contract.FtsoManager(&_Ftso.CallOpts)
}

// GetAsset is a free data retrieval call binding the contract method 0x5c222bad.
//
// Solidity: function getAsset() view returns(address)
func (_Ftso *FtsoCaller) GetAsset(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getAsset")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetAsset is a free data retrieval call binding the contract method 0x5c222bad.
//
// Solidity: function getAsset() view returns(address)
func (_Ftso *FtsoSession) GetAsset() (common.Address, error) {
	return _Ftso.Contract.GetAsset(&_Ftso.CallOpts)
}

// GetAsset is a free data retrieval call binding the contract method 0x5c222bad.
//
// Solidity: function getAsset() view returns(address)
func (_Ftso *FtsoCallerSession) GetAsset() (common.Address, error) {
	return _Ftso.Contract.GetAsset(&_Ftso.CallOpts)
}

// GetAssetFtsos is a free data retrieval call binding the contract method 0x18931c35.
//
// Solidity: function getAssetFtsos() view returns(address[])
func (_Ftso *FtsoCaller) GetAssetFtsos(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getAssetFtsos")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetAssetFtsos is a free data retrieval call binding the contract method 0x18931c35.
//
// Solidity: function getAssetFtsos() view returns(address[])
func (_Ftso *FtsoSession) GetAssetFtsos() ([]common.Address, error) {
	return _Ftso.Contract.GetAssetFtsos(&_Ftso.CallOpts)
}

// GetAssetFtsos is a free data retrieval call binding the contract method 0x18931c35.
//
// Solidity: function getAssetFtsos() view returns(address[])
func (_Ftso *FtsoCallerSession) GetAssetFtsos() ([]common.Address, error) {
	return _Ftso.Contract.GetAssetFtsos(&_Ftso.CallOpts)
}

// GetCurrentEpochId is a free data retrieval call binding the contract method 0xa29a839f.
//
// Solidity: function getCurrentEpochId() view returns(uint256)
func (_Ftso *FtsoCaller) GetCurrentEpochId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getCurrentEpochId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCurrentEpochId is a free data retrieval call binding the contract method 0xa29a839f.
//
// Solidity: function getCurrentEpochId() view returns(uint256)
func (_Ftso *FtsoSession) GetCurrentEpochId() (*big.Int, error) {
	return _Ftso.Contract.GetCurrentEpochId(&_Ftso.CallOpts)
}

// GetCurrentEpochId is a free data retrieval call binding the contract method 0xa29a839f.
//
// Solidity: function getCurrentEpochId() view returns(uint256)
func (_Ftso *FtsoCallerSession) GetCurrentEpochId() (*big.Int, error) {
	return _Ftso.Contract.GetCurrentEpochId(&_Ftso.CallOpts)
}

// GetCurrentPrice is a free data retrieval call binding the contract method 0xeb91d37e.
//
// Solidity: function getCurrentPrice() view returns(uint256 _price, uint256 _timestamp)
func (_Ftso *FtsoCaller) GetCurrentPrice(opts *bind.CallOpts) (struct {
	Price     *big.Int
	Timestamp *big.Int
}, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getCurrentPrice")

	outstruct := new(struct {
		Price     *big.Int
		Timestamp *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Price = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Timestamp = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetCurrentPrice is a free data retrieval call binding the contract method 0xeb91d37e.
//
// Solidity: function getCurrentPrice() view returns(uint256 _price, uint256 _timestamp)
func (_Ftso *FtsoSession) GetCurrentPrice() (struct {
	Price     *big.Int
	Timestamp *big.Int
}, error) {
	return _Ftso.Contract.GetCurrentPrice(&_Ftso.CallOpts)
}

// GetCurrentPrice is a free data retrieval call binding the contract method 0xeb91d37e.
//
// Solidity: function getCurrentPrice() view returns(uint256 _price, uint256 _timestamp)
func (_Ftso *FtsoCallerSession) GetCurrentPrice() (struct {
	Price     *big.Int
	Timestamp *big.Int
}, error) {
	return _Ftso.Contract.GetCurrentPrice(&_Ftso.CallOpts)
}

// GetCurrentRandom is a free data retrieval call binding the contract method 0xd89601fd.
//
// Solidity: function getCurrentRandom() view returns(uint256)
func (_Ftso *FtsoCaller) GetCurrentRandom(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getCurrentRandom")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCurrentRandom is a free data retrieval call binding the contract method 0xd89601fd.
//
// Solidity: function getCurrentRandom() view returns(uint256)
func (_Ftso *FtsoSession) GetCurrentRandom() (*big.Int, error) {
	return _Ftso.Contract.GetCurrentRandom(&_Ftso.CallOpts)
}

// GetCurrentRandom is a free data retrieval call binding the contract method 0xd89601fd.
//
// Solidity: function getCurrentRandom() view returns(uint256)
func (_Ftso *FtsoCallerSession) GetCurrentRandom() (*big.Int, error) {
	return _Ftso.Contract.GetCurrentRandom(&_Ftso.CallOpts)
}

// GetEpochId is a free data retrieval call binding the contract method 0x5303548b.
//
// Solidity: function getEpochId(uint256 _timestamp) view returns(uint256)
func (_Ftso *FtsoCaller) GetEpochId(opts *bind.CallOpts, _timestamp *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getEpochId", _timestamp)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetEpochId is a free data retrieval call binding the contract method 0x5303548b.
//
// Solidity: function getEpochId(uint256 _timestamp) view returns(uint256)
func (_Ftso *FtsoSession) GetEpochId(_timestamp *big.Int) (*big.Int, error) {
	return _Ftso.Contract.GetEpochId(&_Ftso.CallOpts, _timestamp)
}

// GetEpochId is a free data retrieval call binding the contract method 0x5303548b.
//
// Solidity: function getEpochId(uint256 _timestamp) view returns(uint256)
func (_Ftso *FtsoCallerSession) GetEpochId(_timestamp *big.Int) (*big.Int, error) {
	return _Ftso.Contract.GetEpochId(&_Ftso.CallOpts, _timestamp)
}

// GetEpochPrice is a free data retrieval call binding the contract method 0x7d1d6f12.
//
// Solidity: function getEpochPrice(uint256 _epochId) view returns(uint256)
func (_Ftso *FtsoCaller) GetEpochPrice(opts *bind.CallOpts, _epochId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getEpochPrice", _epochId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetEpochPrice is a free data retrieval call binding the contract method 0x7d1d6f12.
//
// Solidity: function getEpochPrice(uint256 _epochId) view returns(uint256)
func (_Ftso *FtsoSession) GetEpochPrice(_epochId *big.Int) (*big.Int, error) {
	return _Ftso.Contract.GetEpochPrice(&_Ftso.CallOpts, _epochId)
}

// GetEpochPrice is a free data retrieval call binding the contract method 0x7d1d6f12.
//
// Solidity: function getEpochPrice(uint256 _epochId) view returns(uint256)
func (_Ftso *FtsoCallerSession) GetEpochPrice(_epochId *big.Int) (*big.Int, error) {
	return _Ftso.Contract.GetEpochPrice(&_Ftso.CallOpts, _epochId)
}

// GetEpochPriceForVoter is a free data retrieval call binding the contract method 0xc5d8b9e7.
//
// Solidity: function getEpochPriceForVoter(uint256 _epochId, address _voter) view returns(uint256)
func (_Ftso *FtsoCaller) GetEpochPriceForVoter(opts *bind.CallOpts, _epochId *big.Int, _voter common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getEpochPriceForVoter", _epochId, _voter)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetEpochPriceForVoter is a free data retrieval call binding the contract method 0xc5d8b9e7.
//
// Solidity: function getEpochPriceForVoter(uint256 _epochId, address _voter) view returns(uint256)
func (_Ftso *FtsoSession) GetEpochPriceForVoter(_epochId *big.Int, _voter common.Address) (*big.Int, error) {
	return _Ftso.Contract.GetEpochPriceForVoter(&_Ftso.CallOpts, _epochId, _voter)
}

// GetEpochPriceForVoter is a free data retrieval call binding the contract method 0xc5d8b9e7.
//
// Solidity: function getEpochPriceForVoter(uint256 _epochId, address _voter) view returns(uint256)
func (_Ftso *FtsoCallerSession) GetEpochPriceForVoter(_epochId *big.Int, _voter common.Address) (*big.Int, error) {
	return _Ftso.Contract.GetEpochPriceForVoter(&_Ftso.CallOpts, _epochId, _voter)
}

// GetPriceEpochConfiguration is a free data retrieval call binding the contract method 0x144e1591.
//
// Solidity: function getPriceEpochConfiguration() view returns(uint256 _firstEpochStartTime, uint256 _submitPeriod, uint256 _revealPeriod)
func (_Ftso *FtsoCaller) GetPriceEpochConfiguration(opts *bind.CallOpts) (struct {
	FirstEpochStartTime *big.Int
	SubmitPeriod        *big.Int
	RevealPeriod        *big.Int
}, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getPriceEpochConfiguration")

	outstruct := new(struct {
		FirstEpochStartTime *big.Int
		SubmitPeriod        *big.Int
		RevealPeriod        *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.FirstEpochStartTime = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.SubmitPeriod = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.RevealPeriod = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetPriceEpochConfiguration is a free data retrieval call binding the contract method 0x144e1591.
//
// Solidity: function getPriceEpochConfiguration() view returns(uint256 _firstEpochStartTime, uint256 _submitPeriod, uint256 _revealPeriod)
func (_Ftso *FtsoSession) GetPriceEpochConfiguration() (struct {
	FirstEpochStartTime *big.Int
	SubmitPeriod        *big.Int
	RevealPeriod        *big.Int
}, error) {
	return _Ftso.Contract.GetPriceEpochConfiguration(&_Ftso.CallOpts)
}

// GetPriceEpochConfiguration is a free data retrieval call binding the contract method 0x144e1591.
//
// Solidity: function getPriceEpochConfiguration() view returns(uint256 _firstEpochStartTime, uint256 _submitPeriod, uint256 _revealPeriod)
func (_Ftso *FtsoCallerSession) GetPriceEpochConfiguration() (struct {
	FirstEpochStartTime *big.Int
	SubmitPeriod        *big.Int
	RevealPeriod        *big.Int
}, error) {
	return _Ftso.Contract.GetPriceEpochConfiguration(&_Ftso.CallOpts)
}

// GetPriceEpochData is a free data retrieval call binding the contract method 0xe3b3a3b3.
//
// Solidity: function getPriceEpochData() view returns(uint256 _epochId, uint256 _epochSubmitEndTime, uint256 _epochRevealEndTime, uint256 _votePowerBlock, bool _fallbackMode)
func (_Ftso *FtsoCaller) GetPriceEpochData(opts *bind.CallOpts) (struct {
	EpochId            *big.Int
	EpochSubmitEndTime *big.Int
	EpochRevealEndTime *big.Int
	VotePowerBlock     *big.Int
	FallbackMode       bool
}, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getPriceEpochData")

	outstruct := new(struct {
		EpochId            *big.Int
		EpochSubmitEndTime *big.Int
		EpochRevealEndTime *big.Int
		VotePowerBlock     *big.Int
		FallbackMode       bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.EpochId = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.EpochSubmitEndTime = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.EpochRevealEndTime = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.VotePowerBlock = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.FallbackMode = *abi.ConvertType(out[4], new(bool)).(*bool)

	return *outstruct, err

}

// GetPriceEpochData is a free data retrieval call binding the contract method 0xe3b3a3b3.
//
// Solidity: function getPriceEpochData() view returns(uint256 _epochId, uint256 _epochSubmitEndTime, uint256 _epochRevealEndTime, uint256 _votePowerBlock, bool _fallbackMode)
func (_Ftso *FtsoSession) GetPriceEpochData() (struct {
	EpochId            *big.Int
	EpochSubmitEndTime *big.Int
	EpochRevealEndTime *big.Int
	VotePowerBlock     *big.Int
	FallbackMode       bool
}, error) {
	return _Ftso.Contract.GetPriceEpochData(&_Ftso.CallOpts)
}

// GetPriceEpochData is a free data retrieval call binding the contract method 0xe3b3a3b3.
//
// Solidity: function getPriceEpochData() view returns(uint256 _epochId, uint256 _epochSubmitEndTime, uint256 _epochRevealEndTime, uint256 _votePowerBlock, bool _fallbackMode)
func (_Ftso *FtsoCallerSession) GetPriceEpochData() (struct {
	EpochId            *big.Int
	EpochSubmitEndTime *big.Int
	EpochRevealEndTime *big.Int
	VotePowerBlock     *big.Int
	FallbackMode       bool
}, error) {
	return _Ftso.Contract.GetPriceEpochData(&_Ftso.CallOpts)
}

// GetRandom is a free data retrieval call binding the contract method 0xcd4b6914.
//
// Solidity: function getRandom(uint256 _epochId) view returns(uint256)
func (_Ftso *FtsoCaller) GetRandom(opts *bind.CallOpts, _epochId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getRandom", _epochId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetRandom is a free data retrieval call binding the contract method 0xcd4b6914.
//
// Solidity: function getRandom(uint256 _epochId) view returns(uint256)
func (_Ftso *FtsoSession) GetRandom(_epochId *big.Int) (*big.Int, error) {
	return _Ftso.Contract.GetRandom(&_Ftso.CallOpts, _epochId)
}

// GetRandom is a free data retrieval call binding the contract method 0xcd4b6914.
//
// Solidity: function getRandom(uint256 _epochId) view returns(uint256)
func (_Ftso *FtsoCallerSession) GetRandom(_epochId *big.Int) (*big.Int, error) {
	return _Ftso.Contract.GetRandom(&_Ftso.CallOpts, _epochId)
}

// GetVoteWeightingParameters is a free data retrieval call binding the contract method 0x8357d08c.
//
// Solidity: function getVoteWeightingParameters() view returns(address[] _assets, uint256[] _assetMultipliers, uint256 _totalVotePowerNat, uint256 _totalVotePowerAsset, uint256 _assetWeightRatio, uint256 _votePowerBlock)
func (_Ftso *FtsoCaller) GetVoteWeightingParameters(opts *bind.CallOpts) (struct {
	Assets              []common.Address
	AssetMultipliers    []*big.Int
	TotalVotePowerNat   *big.Int
	TotalVotePowerAsset *big.Int
	AssetWeightRatio    *big.Int
	VotePowerBlock      *big.Int
}, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "getVoteWeightingParameters")

	outstruct := new(struct {
		Assets              []common.Address
		AssetMultipliers    []*big.Int
		TotalVotePowerNat   *big.Int
		TotalVotePowerAsset *big.Int
		AssetWeightRatio    *big.Int
		VotePowerBlock      *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Assets = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.AssetMultipliers = *abi.ConvertType(out[1], new([]*big.Int)).(*[]*big.Int)
	outstruct.TotalVotePowerNat = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.TotalVotePowerAsset = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.AssetWeightRatio = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.VotePowerBlock = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetVoteWeightingParameters is a free data retrieval call binding the contract method 0x8357d08c.
//
// Solidity: function getVoteWeightingParameters() view returns(address[] _assets, uint256[] _assetMultipliers, uint256 _totalVotePowerNat, uint256 _totalVotePowerAsset, uint256 _assetWeightRatio, uint256 _votePowerBlock)
func (_Ftso *FtsoSession) GetVoteWeightingParameters() (struct {
	Assets              []common.Address
	AssetMultipliers    []*big.Int
	TotalVotePowerNat   *big.Int
	TotalVotePowerAsset *big.Int
	AssetWeightRatio    *big.Int
	VotePowerBlock      *big.Int
}, error) {
	return _Ftso.Contract.GetVoteWeightingParameters(&_Ftso.CallOpts)
}

// GetVoteWeightingParameters is a free data retrieval call binding the contract method 0x8357d08c.
//
// Solidity: function getVoteWeightingParameters() view returns(address[] _assets, uint256[] _assetMultipliers, uint256 _totalVotePowerNat, uint256 _totalVotePowerAsset, uint256 _assetWeightRatio, uint256 _votePowerBlock)
func (_Ftso *FtsoCallerSession) GetVoteWeightingParameters() (struct {
	Assets              []common.Address
	AssetMultipliers    []*big.Int
	TotalVotePowerNat   *big.Int
	TotalVotePowerAsset *big.Int
	AssetWeightRatio    *big.Int
	VotePowerBlock      *big.Int
}, error) {
	return _Ftso.Contract.GetVoteWeightingParameters(&_Ftso.CallOpts)
}

// PriceDeviationThresholdBIPS is a free data retrieval call binding the contract method 0xcc245ab5.
//
// Solidity: function priceDeviationThresholdBIPS() view returns(uint256)
func (_Ftso *FtsoCaller) PriceDeviationThresholdBIPS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "priceDeviationThresholdBIPS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PriceDeviationThresholdBIPS is a free data retrieval call binding the contract method 0xcc245ab5.
//
// Solidity: function priceDeviationThresholdBIPS() view returns(uint256)
func (_Ftso *FtsoSession) PriceDeviationThresholdBIPS() (*big.Int, error) {
	return _Ftso.Contract.PriceDeviationThresholdBIPS(&_Ftso.CallOpts)
}

// PriceDeviationThresholdBIPS is a free data retrieval call binding the contract method 0xcc245ab5.
//
// Solidity: function priceDeviationThresholdBIPS() view returns(uint256)
func (_Ftso *FtsoCallerSession) PriceDeviationThresholdBIPS() (*big.Int, error) {
	return _Ftso.Contract.PriceDeviationThresholdBIPS(&_Ftso.CallOpts)
}

// PriceEpochCyclicBufferSize is a free data retrieval call binding the contract method 0xf025bf66.
//
// Solidity: function priceEpochCyclicBufferSize() view returns(uint256)
func (_Ftso *FtsoCaller) PriceEpochCyclicBufferSize(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "priceEpochCyclicBufferSize")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PriceEpochCyclicBufferSize is a free data retrieval call binding the contract method 0xf025bf66.
//
// Solidity: function priceEpochCyclicBufferSize() view returns(uint256)
func (_Ftso *FtsoSession) PriceEpochCyclicBufferSize() (*big.Int, error) {
	return _Ftso.Contract.PriceEpochCyclicBufferSize(&_Ftso.CallOpts)
}

// PriceEpochCyclicBufferSize is a free data retrieval call binding the contract method 0xf025bf66.
//
// Solidity: function priceEpochCyclicBufferSize() view returns(uint256)
func (_Ftso *FtsoCallerSession) PriceEpochCyclicBufferSize() (*big.Int, error) {
	return _Ftso.Contract.PriceEpochCyclicBufferSize(&_Ftso.CallOpts)
}

// PriceSubmitter is a free data retrieval call binding the contract method 0xf937d6ad.
//
// Solidity: function priceSubmitter() view returns(address)
func (_Ftso *FtsoCaller) PriceSubmitter(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "priceSubmitter")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PriceSubmitter is a free data retrieval call binding the contract method 0xf937d6ad.
//
// Solidity: function priceSubmitter() view returns(address)
func (_Ftso *FtsoSession) PriceSubmitter() (common.Address, error) {
	return _Ftso.Contract.PriceSubmitter(&_Ftso.CallOpts)
}

// PriceSubmitter is a free data retrieval call binding the contract method 0xf937d6ad.
//
// Solidity: function priceSubmitter() view returns(address)
func (_Ftso *FtsoCallerSession) PriceSubmitter() (common.Address, error) {
	return _Ftso.Contract.PriceSubmitter(&_Ftso.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Ftso *FtsoCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Ftso *FtsoSession) Symbol() (string, error) {
	return _Ftso.Contract.Symbol(&_Ftso.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Ftso *FtsoCallerSession) Symbol() (string, error) {
	return _Ftso.Contract.Symbol(&_Ftso.CallOpts)
}

// WNat is a free data retrieval call binding the contract method 0x9edbf007.
//
// Solidity: function wNat() view returns(address)
func (_Ftso *FtsoCaller) WNat(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Ftso.contract.Call(opts, &out, "wNat")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WNat is a free data retrieval call binding the contract method 0x9edbf007.
//
// Solidity: function wNat() view returns(address)
func (_Ftso *FtsoSession) WNat() (common.Address, error) {
	return _Ftso.Contract.WNat(&_Ftso.CallOpts)
}

// WNat is a free data retrieval call binding the contract method 0x9edbf007.
//
// Solidity: function wNat() view returns(address)
func (_Ftso *FtsoCallerSession) WNat() (common.Address, error) {
	return _Ftso.Contract.WNat(&_Ftso.CallOpts)
}

// ActivateFtso is a paid mutator transaction binding the contract method 0x2f0a6f3c.
//
// Solidity: function activateFtso(uint256 _firstEpochStartTime, uint256 _submitPeriod, uint256 _revealPeriod) returns()
func (_Ftso *FtsoTransactor) ActivateFtso(opts *bind.TransactOpts, _firstEpochStartTime *big.Int, _submitPeriod *big.Int, _revealPeriod *big.Int) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "activateFtso", _firstEpochStartTime, _submitPeriod, _revealPeriod)
}

// ActivateFtso is a paid mutator transaction binding the contract method 0x2f0a6f3c.
//
// Solidity: function activateFtso(uint256 _firstEpochStartTime, uint256 _submitPeriod, uint256 _revealPeriod) returns()
func (_Ftso *FtsoSession) ActivateFtso(_firstEpochStartTime *big.Int, _submitPeriod *big.Int, _revealPeriod *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.ActivateFtso(&_Ftso.TransactOpts, _firstEpochStartTime, _submitPeriod, _revealPeriod)
}

// ActivateFtso is a paid mutator transaction binding the contract method 0x2f0a6f3c.
//
// Solidity: function activateFtso(uint256 _firstEpochStartTime, uint256 _submitPeriod, uint256 _revealPeriod) returns()
func (_Ftso *FtsoTransactorSession) ActivateFtso(_firstEpochStartTime *big.Int, _submitPeriod *big.Int, _revealPeriod *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.ActivateFtso(&_Ftso.TransactOpts, _firstEpochStartTime, _submitPeriod, _revealPeriod)
}

// AverageFinalizePriceEpoch is a paid mutator transaction binding the contract method 0x9de6f927.
//
// Solidity: function averageFinalizePriceEpoch(uint256 _epochId) returns()
func (_Ftso *FtsoTransactor) AverageFinalizePriceEpoch(opts *bind.TransactOpts, _epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "averageFinalizePriceEpoch", _epochId)
}

// AverageFinalizePriceEpoch is a paid mutator transaction binding the contract method 0x9de6f927.
//
// Solidity: function averageFinalizePriceEpoch(uint256 _epochId) returns()
func (_Ftso *FtsoSession) AverageFinalizePriceEpoch(_epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.AverageFinalizePriceEpoch(&_Ftso.TransactOpts, _epochId)
}

// AverageFinalizePriceEpoch is a paid mutator transaction binding the contract method 0x9de6f927.
//
// Solidity: function averageFinalizePriceEpoch(uint256 _epochId) returns()
func (_Ftso *FtsoTransactorSession) AverageFinalizePriceEpoch(_epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.AverageFinalizePriceEpoch(&_Ftso.TransactOpts, _epochId)
}

// ConfigureEpochs is a paid mutator transaction binding the contract method 0xf7dba1f5.
//
// Solidity: function configureEpochs(uint256 _maxVotePowerNatThresholdFraction, uint256 _maxVotePowerAssetThresholdFraction, uint256 _lowAssetUSDThreshold, uint256 _highAssetUSDThreshold, uint256 _highAssetTurnoutThresholdBIPS, uint256 _lowNatTurnoutThresholdBIPS, address[] _trustedAddresses) returns()
func (_Ftso *FtsoTransactor) ConfigureEpochs(opts *bind.TransactOpts, _maxVotePowerNatThresholdFraction *big.Int, _maxVotePowerAssetThresholdFraction *big.Int, _lowAssetUSDThreshold *big.Int, _highAssetUSDThreshold *big.Int, _highAssetTurnoutThresholdBIPS *big.Int, _lowNatTurnoutThresholdBIPS *big.Int, _trustedAddresses []common.Address) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "configureEpochs", _maxVotePowerNatThresholdFraction, _maxVotePowerAssetThresholdFraction, _lowAssetUSDThreshold, _highAssetUSDThreshold, _highAssetTurnoutThresholdBIPS, _lowNatTurnoutThresholdBIPS, _trustedAddresses)
}

// ConfigureEpochs is a paid mutator transaction binding the contract method 0xf7dba1f5.
//
// Solidity: function configureEpochs(uint256 _maxVotePowerNatThresholdFraction, uint256 _maxVotePowerAssetThresholdFraction, uint256 _lowAssetUSDThreshold, uint256 _highAssetUSDThreshold, uint256 _highAssetTurnoutThresholdBIPS, uint256 _lowNatTurnoutThresholdBIPS, address[] _trustedAddresses) returns()
func (_Ftso *FtsoSession) ConfigureEpochs(_maxVotePowerNatThresholdFraction *big.Int, _maxVotePowerAssetThresholdFraction *big.Int, _lowAssetUSDThreshold *big.Int, _highAssetUSDThreshold *big.Int, _highAssetTurnoutThresholdBIPS *big.Int, _lowNatTurnoutThresholdBIPS *big.Int, _trustedAddresses []common.Address) (*types.Transaction, error) {
	return _Ftso.Contract.ConfigureEpochs(&_Ftso.TransactOpts, _maxVotePowerNatThresholdFraction, _maxVotePowerAssetThresholdFraction, _lowAssetUSDThreshold, _highAssetUSDThreshold, _highAssetTurnoutThresholdBIPS, _lowNatTurnoutThresholdBIPS, _trustedAddresses)
}

// ConfigureEpochs is a paid mutator transaction binding the contract method 0xf7dba1f5.
//
// Solidity: function configureEpochs(uint256 _maxVotePowerNatThresholdFraction, uint256 _maxVotePowerAssetThresholdFraction, uint256 _lowAssetUSDThreshold, uint256 _highAssetUSDThreshold, uint256 _highAssetTurnoutThresholdBIPS, uint256 _lowNatTurnoutThresholdBIPS, address[] _trustedAddresses) returns()
func (_Ftso *FtsoTransactorSession) ConfigureEpochs(_maxVotePowerNatThresholdFraction *big.Int, _maxVotePowerAssetThresholdFraction *big.Int, _lowAssetUSDThreshold *big.Int, _highAssetUSDThreshold *big.Int, _highAssetTurnoutThresholdBIPS *big.Int, _lowNatTurnoutThresholdBIPS *big.Int, _trustedAddresses []common.Address) (*types.Transaction, error) {
	return _Ftso.Contract.ConfigureEpochs(&_Ftso.TransactOpts, _maxVotePowerNatThresholdFraction, _maxVotePowerAssetThresholdFraction, _lowAssetUSDThreshold, _highAssetUSDThreshold, _highAssetTurnoutThresholdBIPS, _lowNatTurnoutThresholdBIPS, _trustedAddresses)
}

// DeactivateFtso is a paid mutator transaction binding the contract method 0x555989da.
//
// Solidity: function deactivateFtso() returns()
func (_Ftso *FtsoTransactor) DeactivateFtso(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "deactivateFtso")
}

// DeactivateFtso is a paid mutator transaction binding the contract method 0x555989da.
//
// Solidity: function deactivateFtso() returns()
func (_Ftso *FtsoSession) DeactivateFtso() (*types.Transaction, error) {
	return _Ftso.Contract.DeactivateFtso(&_Ftso.TransactOpts)
}

// DeactivateFtso is a paid mutator transaction binding the contract method 0x555989da.
//
// Solidity: function deactivateFtso() returns()
func (_Ftso *FtsoTransactorSession) DeactivateFtso() (*types.Transaction, error) {
	return _Ftso.Contract.DeactivateFtso(&_Ftso.TransactOpts)
}

// FinalizePriceEpoch is a paid mutator transaction binding the contract method 0x40462a2d.
//
// Solidity: function finalizePriceEpoch(uint256 _epochId, bool _returnRewardData) returns(address[] _eligibleAddresses, uint256[] _natWeights, uint256 _natWeightsSum)
func (_Ftso *FtsoTransactor) FinalizePriceEpoch(opts *bind.TransactOpts, _epochId *big.Int, _returnRewardData bool) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "finalizePriceEpoch", _epochId, _returnRewardData)
}

// FinalizePriceEpoch is a paid mutator transaction binding the contract method 0x40462a2d.
//
// Solidity: function finalizePriceEpoch(uint256 _epochId, bool _returnRewardData) returns(address[] _eligibleAddresses, uint256[] _natWeights, uint256 _natWeightsSum)
func (_Ftso *FtsoSession) FinalizePriceEpoch(_epochId *big.Int, _returnRewardData bool) (*types.Transaction, error) {
	return _Ftso.Contract.FinalizePriceEpoch(&_Ftso.TransactOpts, _epochId, _returnRewardData)
}

// FinalizePriceEpoch is a paid mutator transaction binding the contract method 0x40462a2d.
//
// Solidity: function finalizePriceEpoch(uint256 _epochId, bool _returnRewardData) returns(address[] _eligibleAddresses, uint256[] _natWeights, uint256 _natWeightsSum)
func (_Ftso *FtsoTransactorSession) FinalizePriceEpoch(_epochId *big.Int, _returnRewardData bool) (*types.Transaction, error) {
	return _Ftso.Contract.FinalizePriceEpoch(&_Ftso.TransactOpts, _epochId, _returnRewardData)
}

// ForceFinalizePriceEpoch is a paid mutator transaction binding the contract method 0x974d7a6b.
//
// Solidity: function forceFinalizePriceEpoch(uint256 _epochId) returns()
func (_Ftso *FtsoTransactor) ForceFinalizePriceEpoch(opts *bind.TransactOpts, _epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "forceFinalizePriceEpoch", _epochId)
}

// ForceFinalizePriceEpoch is a paid mutator transaction binding the contract method 0x974d7a6b.
//
// Solidity: function forceFinalizePriceEpoch(uint256 _epochId) returns()
func (_Ftso *FtsoSession) ForceFinalizePriceEpoch(_epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.ForceFinalizePriceEpoch(&_Ftso.TransactOpts, _epochId)
}

// ForceFinalizePriceEpoch is a paid mutator transaction binding the contract method 0x974d7a6b.
//
// Solidity: function forceFinalizePriceEpoch(uint256 _epochId) returns()
func (_Ftso *FtsoTransactorSession) ForceFinalizePriceEpoch(_epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.ForceFinalizePriceEpoch(&_Ftso.TransactOpts, _epochId)
}

// InitializeCurrentEpochStateForReveal is a paid mutator transaction binding the contract method 0xf670ebe3.
//
// Solidity: function initializeCurrentEpochStateForReveal(uint256 _circulatingSupplyNat, bool _fallbackMode) returns()
func (_Ftso *FtsoTransactor) InitializeCurrentEpochStateForReveal(opts *bind.TransactOpts, _circulatingSupplyNat *big.Int, _fallbackMode bool) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "initializeCurrentEpochStateForReveal", _circulatingSupplyNat, _fallbackMode)
}

// InitializeCurrentEpochStateForReveal is a paid mutator transaction binding the contract method 0xf670ebe3.
//
// Solidity: function initializeCurrentEpochStateForReveal(uint256 _circulatingSupplyNat, bool _fallbackMode) returns()
func (_Ftso *FtsoSession) InitializeCurrentEpochStateForReveal(_circulatingSupplyNat *big.Int, _fallbackMode bool) (*types.Transaction, error) {
	return _Ftso.Contract.InitializeCurrentEpochStateForReveal(&_Ftso.TransactOpts, _circulatingSupplyNat, _fallbackMode)
}

// InitializeCurrentEpochStateForReveal is a paid mutator transaction binding the contract method 0xf670ebe3.
//
// Solidity: function initializeCurrentEpochStateForReveal(uint256 _circulatingSupplyNat, bool _fallbackMode) returns()
func (_Ftso *FtsoTransactorSession) InitializeCurrentEpochStateForReveal(_circulatingSupplyNat *big.Int, _fallbackMode bool) (*types.Transaction, error) {
	return _Ftso.Contract.InitializeCurrentEpochStateForReveal(&_Ftso.TransactOpts, _circulatingSupplyNat, _fallbackMode)
}

// RevealPriceSubmitter is a paid mutator transaction binding the contract method 0x55f7b69b.
//
// Solidity: function revealPriceSubmitter(address _voter, uint256 _epochId, uint256 _price, uint256 _random, uint256 _voterWNatVP) returns()
func (_Ftso *FtsoTransactor) RevealPriceSubmitter(opts *bind.TransactOpts, _voter common.Address, _epochId *big.Int, _price *big.Int, _random *big.Int, _voterWNatVP *big.Int) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "revealPriceSubmitter", _voter, _epochId, _price, _random, _voterWNatVP)
}

// RevealPriceSubmitter is a paid mutator transaction binding the contract method 0x55f7b69b.
//
// Solidity: function revealPriceSubmitter(address _voter, uint256 _epochId, uint256 _price, uint256 _random, uint256 _voterWNatVP) returns()
func (_Ftso *FtsoSession) RevealPriceSubmitter(_voter common.Address, _epochId *big.Int, _price *big.Int, _random *big.Int, _voterWNatVP *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.RevealPriceSubmitter(&_Ftso.TransactOpts, _voter, _epochId, _price, _random, _voterWNatVP)
}

// RevealPriceSubmitter is a paid mutator transaction binding the contract method 0x55f7b69b.
//
// Solidity: function revealPriceSubmitter(address _voter, uint256 _epochId, uint256 _price, uint256 _random, uint256 _voterWNatVP) returns()
func (_Ftso *FtsoTransactorSession) RevealPriceSubmitter(_voter common.Address, _epochId *big.Int, _price *big.Int, _random *big.Int, _voterWNatVP *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.RevealPriceSubmitter(&_Ftso.TransactOpts, _voter, _epochId, _price, _random, _voterWNatVP)
}

// SetAsset is a paid mutator transaction binding the contract method 0xd0d552dd.
//
// Solidity: function setAsset(address _asset) returns()
func (_Ftso *FtsoTransactor) SetAsset(opts *bind.TransactOpts, _asset common.Address) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "setAsset", _asset)
}

// SetAsset is a paid mutator transaction binding the contract method 0xd0d552dd.
//
// Solidity: function setAsset(address _asset) returns()
func (_Ftso *FtsoSession) SetAsset(_asset common.Address) (*types.Transaction, error) {
	return _Ftso.Contract.SetAsset(&_Ftso.TransactOpts, _asset)
}

// SetAsset is a paid mutator transaction binding the contract method 0xd0d552dd.
//
// Solidity: function setAsset(address _asset) returns()
func (_Ftso *FtsoTransactorSession) SetAsset(_asset common.Address) (*types.Transaction, error) {
	return _Ftso.Contract.SetAsset(&_Ftso.TransactOpts, _asset)
}

// SetAssetFtsos is a paid mutator transaction binding the contract method 0x131fdee2.
//
// Solidity: function setAssetFtsos(address[] _assetFtsos) returns()
func (_Ftso *FtsoTransactor) SetAssetFtsos(opts *bind.TransactOpts, _assetFtsos []common.Address) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "setAssetFtsos", _assetFtsos)
}

// SetAssetFtsos is a paid mutator transaction binding the contract method 0x131fdee2.
//
// Solidity: function setAssetFtsos(address[] _assetFtsos) returns()
func (_Ftso *FtsoSession) SetAssetFtsos(_assetFtsos []common.Address) (*types.Transaction, error) {
	return _Ftso.Contract.SetAssetFtsos(&_Ftso.TransactOpts, _assetFtsos)
}

// SetAssetFtsos is a paid mutator transaction binding the contract method 0x131fdee2.
//
// Solidity: function setAssetFtsos(address[] _assetFtsos) returns()
func (_Ftso *FtsoTransactorSession) SetAssetFtsos(_assetFtsos []common.Address) (*types.Transaction, error) {
	return _Ftso.Contract.SetAssetFtsos(&_Ftso.TransactOpts, _assetFtsos)
}

// SetVotePowerBlock is a paid mutator transaction binding the contract method 0xe536f396.
//
// Solidity: function setVotePowerBlock(uint256 _votePowerBlock) returns()
func (_Ftso *FtsoTransactor) SetVotePowerBlock(opts *bind.TransactOpts, _votePowerBlock *big.Int) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "setVotePowerBlock", _votePowerBlock)
}

// SetVotePowerBlock is a paid mutator transaction binding the contract method 0xe536f396.
//
// Solidity: function setVotePowerBlock(uint256 _votePowerBlock) returns()
func (_Ftso *FtsoSession) SetVotePowerBlock(_votePowerBlock *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.SetVotePowerBlock(&_Ftso.TransactOpts, _votePowerBlock)
}

// SetVotePowerBlock is a paid mutator transaction binding the contract method 0xe536f396.
//
// Solidity: function setVotePowerBlock(uint256 _votePowerBlock) returns()
func (_Ftso *FtsoTransactorSession) SetVotePowerBlock(_votePowerBlock *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.SetVotePowerBlock(&_Ftso.TransactOpts, _votePowerBlock)
}

// SubmitPriceHashSubmitter is a paid mutator transaction binding the contract method 0x27bd2ad5.
//
// Solidity: function submitPriceHashSubmitter(address _sender, uint256 _epochId, bytes32 _hash) returns()
func (_Ftso *FtsoTransactor) SubmitPriceHashSubmitter(opts *bind.TransactOpts, _sender common.Address, _epochId *big.Int, _hash [32]byte) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "submitPriceHashSubmitter", _sender, _epochId, _hash)
}

// SubmitPriceHashSubmitter is a paid mutator transaction binding the contract method 0x27bd2ad5.
//
// Solidity: function submitPriceHashSubmitter(address _sender, uint256 _epochId, bytes32 _hash) returns()
func (_Ftso *FtsoSession) SubmitPriceHashSubmitter(_sender common.Address, _epochId *big.Int, _hash [32]byte) (*types.Transaction, error) {
	return _Ftso.Contract.SubmitPriceHashSubmitter(&_Ftso.TransactOpts, _sender, _epochId, _hash)
}

// SubmitPriceHashSubmitter is a paid mutator transaction binding the contract method 0x27bd2ad5.
//
// Solidity: function submitPriceHashSubmitter(address _sender, uint256 _epochId, bytes32 _hash) returns()
func (_Ftso *FtsoTransactorSession) SubmitPriceHashSubmitter(_sender common.Address, _epochId *big.Int, _hash [32]byte) (*types.Transaction, error) {
	return _Ftso.Contract.SubmitPriceHashSubmitter(&_Ftso.TransactOpts, _sender, _epochId, _hash)
}

// UpdateInitialPrice is a paid mutator transaction binding the contract method 0x306ba253.
//
// Solidity: function updateInitialPrice(uint256 _initialPriceUSD, uint256 _initialPriceTimestamp) returns()
func (_Ftso *FtsoTransactor) UpdateInitialPrice(opts *bind.TransactOpts, _initialPriceUSD *big.Int, _initialPriceTimestamp *big.Int) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "updateInitialPrice", _initialPriceUSD, _initialPriceTimestamp)
}

// UpdateInitialPrice is a paid mutator transaction binding the contract method 0x306ba253.
//
// Solidity: function updateInitialPrice(uint256 _initialPriceUSD, uint256 _initialPriceTimestamp) returns()
func (_Ftso *FtsoSession) UpdateInitialPrice(_initialPriceUSD *big.Int, _initialPriceTimestamp *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.UpdateInitialPrice(&_Ftso.TransactOpts, _initialPriceUSD, _initialPriceTimestamp)
}

// UpdateInitialPrice is a paid mutator transaction binding the contract method 0x306ba253.
//
// Solidity: function updateInitialPrice(uint256 _initialPriceUSD, uint256 _initialPriceTimestamp) returns()
func (_Ftso *FtsoTransactorSession) UpdateInitialPrice(_initialPriceUSD *big.Int, _initialPriceTimestamp *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.UpdateInitialPrice(&_Ftso.TransactOpts, _initialPriceUSD, _initialPriceTimestamp)
}

// WNatVotePowerCached is a paid mutator transaction binding the contract method 0xf72cab28.
//
// Solidity: function wNatVotePowerCached(address _owner, uint256 _epochId) returns(uint256)
func (_Ftso *FtsoTransactor) WNatVotePowerCached(opts *bind.TransactOpts, _owner common.Address, _epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.contract.Transact(opts, "wNatVotePowerCached", _owner, _epochId)
}

// WNatVotePowerCached is a paid mutator transaction binding the contract method 0xf72cab28.
//
// Solidity: function wNatVotePowerCached(address _owner, uint256 _epochId) returns(uint256)
func (_Ftso *FtsoSession) WNatVotePowerCached(_owner common.Address, _epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.WNatVotePowerCached(&_Ftso.TransactOpts, _owner, _epochId)
}

// WNatVotePowerCached is a paid mutator transaction binding the contract method 0xf72cab28.
//
// Solidity: function wNatVotePowerCached(address _owner, uint256 _epochId) returns(uint256)
func (_Ftso *FtsoTransactorSession) WNatVotePowerCached(_owner common.Address, _epochId *big.Int) (*types.Transaction, error) {
	return _Ftso.Contract.WNatVotePowerCached(&_Ftso.TransactOpts, _owner, _epochId)
}

// FtsoLowTurnoutIterator is returned from FilterLowTurnout and is used to iterate over the raw logs and unpacked data for LowTurnout events raised by the Ftso contract.
type FtsoLowTurnoutIterator struct {
	Event *FtsoLowTurnout // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FtsoLowTurnoutIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FtsoLowTurnout)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FtsoLowTurnout)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FtsoLowTurnoutIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FtsoLowTurnoutIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FtsoLowTurnout represents a LowTurnout event raised by the Ftso contract.
type FtsoLowTurnout struct {
	EpochId                    *big.Int
	NatTurnout                 *big.Int
	LowNatTurnoutThresholdBIPS *big.Int
	Timestamp                  *big.Int
	Raw                        types.Log // Blockchain specific contextual infos
}

// FilterLowTurnout is a free log retrieval operation binding the contract event 0xbece8aa526cdc5e528cdaa56c1d03edc19da51e41845aa146f64a7071f74c65a.
//
// Solidity: event LowTurnout(uint256 indexed epochId, uint256 natTurnout, uint256 lowNatTurnoutThresholdBIPS, uint256 timestamp)
func (_Ftso *FtsoFilterer) FilterLowTurnout(opts *bind.FilterOpts, epochId []*big.Int) (*FtsoLowTurnoutIterator, error) {

	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.FilterLogs(opts, "LowTurnout", epochIdRule)
	if err != nil {
		return nil, err
	}
	return &FtsoLowTurnoutIterator{contract: _Ftso.contract, event: "LowTurnout", logs: logs, sub: sub}, nil
}

// WatchLowTurnout is a free log subscription operation binding the contract event 0xbece8aa526cdc5e528cdaa56c1d03edc19da51e41845aa146f64a7071f74c65a.
//
// Solidity: event LowTurnout(uint256 indexed epochId, uint256 natTurnout, uint256 lowNatTurnoutThresholdBIPS, uint256 timestamp)
func (_Ftso *FtsoFilterer) WatchLowTurnout(opts *bind.WatchOpts, sink chan<- *FtsoLowTurnout, epochId []*big.Int) (event.Subscription, error) {

	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.WatchLogs(opts, "LowTurnout", epochIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FtsoLowTurnout)
				if err := _Ftso.contract.UnpackLog(event, "LowTurnout", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLowTurnout is a log parse operation binding the contract event 0xbece8aa526cdc5e528cdaa56c1d03edc19da51e41845aa146f64a7071f74c65a.
//
// Solidity: event LowTurnout(uint256 indexed epochId, uint256 natTurnout, uint256 lowNatTurnoutThresholdBIPS, uint256 timestamp)
func (_Ftso *FtsoFilterer) ParseLowTurnout(log types.Log) (*FtsoLowTurnout, error) {
	event := new(FtsoLowTurnout)
	if err := _Ftso.contract.UnpackLog(event, "LowTurnout", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FtsoPriceEpochInitializedOnFtsoIterator is returned from FilterPriceEpochInitializedOnFtso and is used to iterate over the raw logs and unpacked data for PriceEpochInitializedOnFtso events raised by the Ftso contract.
type FtsoPriceEpochInitializedOnFtsoIterator struct {
	Event *FtsoPriceEpochInitializedOnFtso // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FtsoPriceEpochInitializedOnFtsoIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FtsoPriceEpochInitializedOnFtso)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FtsoPriceEpochInitializedOnFtso)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FtsoPriceEpochInitializedOnFtsoIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FtsoPriceEpochInitializedOnFtsoIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FtsoPriceEpochInitializedOnFtso represents a PriceEpochInitializedOnFtso event raised by the Ftso contract.
type FtsoPriceEpochInitializedOnFtso struct {
	EpochId   *big.Int
	EndTime   *big.Int
	Timestamp *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterPriceEpochInitializedOnFtso is a free log retrieval operation binding the contract event 0xc0eaa359541c7c642d9947c9496507c134f3e4f8e1fd433313eb27dc48cb1fb7.
//
// Solidity: event PriceEpochInitializedOnFtso(uint256 indexed epochId, uint256 endTime, uint256 timestamp)
func (_Ftso *FtsoFilterer) FilterPriceEpochInitializedOnFtso(opts *bind.FilterOpts, epochId []*big.Int) (*FtsoPriceEpochInitializedOnFtsoIterator, error) {

	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.FilterLogs(opts, "PriceEpochInitializedOnFtso", epochIdRule)
	if err != nil {
		return nil, err
	}
	return &FtsoPriceEpochInitializedOnFtsoIterator{contract: _Ftso.contract, event: "PriceEpochInitializedOnFtso", logs: logs, sub: sub}, nil
}

// WatchPriceEpochInitializedOnFtso is a free log subscription operation binding the contract event 0xc0eaa359541c7c642d9947c9496507c134f3e4f8e1fd433313eb27dc48cb1fb7.
//
// Solidity: event PriceEpochInitializedOnFtso(uint256 indexed epochId, uint256 endTime, uint256 timestamp)
func (_Ftso *FtsoFilterer) WatchPriceEpochInitializedOnFtso(opts *bind.WatchOpts, sink chan<- *FtsoPriceEpochInitializedOnFtso, epochId []*big.Int) (event.Subscription, error) {

	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.WatchLogs(opts, "PriceEpochInitializedOnFtso", epochIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FtsoPriceEpochInitializedOnFtso)
				if err := _Ftso.contract.UnpackLog(event, "PriceEpochInitializedOnFtso", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePriceEpochInitializedOnFtso is a log parse operation binding the contract event 0xc0eaa359541c7c642d9947c9496507c134f3e4f8e1fd433313eb27dc48cb1fb7.
//
// Solidity: event PriceEpochInitializedOnFtso(uint256 indexed epochId, uint256 endTime, uint256 timestamp)
func (_Ftso *FtsoFilterer) ParsePriceEpochInitializedOnFtso(log types.Log) (*FtsoPriceEpochInitializedOnFtso, error) {
	event := new(FtsoPriceEpochInitializedOnFtso)
	if err := _Ftso.contract.UnpackLog(event, "PriceEpochInitializedOnFtso", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FtsoPriceFinalizedIterator is returned from FilterPriceFinalized and is used to iterate over the raw logs and unpacked data for PriceFinalized events raised by the Ftso contract.
type FtsoPriceFinalizedIterator struct {
	Event *FtsoPriceFinalized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FtsoPriceFinalizedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FtsoPriceFinalized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FtsoPriceFinalized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FtsoPriceFinalizedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FtsoPriceFinalizedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FtsoPriceFinalized represents a PriceFinalized event raised by the Ftso contract.
type FtsoPriceFinalized struct {
	EpochId          *big.Int
	Price            *big.Int
	RewardedFtso     bool
	LowRewardPrice   *big.Int
	HighRewardPrice  *big.Int
	FinalizationType uint8
	Timestamp        *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterPriceFinalized is a free log retrieval operation binding the contract event 0xfe8865c1fe85bbf124b9e0f16cccfeeb6f330454fd79475a31261c8fa250bc30.
//
// Solidity: event PriceFinalized(uint256 indexed epochId, uint256 price, bool rewardedFtso, uint256 lowRewardPrice, uint256 highRewardPrice, uint8 finalizationType, uint256 timestamp)
func (_Ftso *FtsoFilterer) FilterPriceFinalized(opts *bind.FilterOpts, epochId []*big.Int) (*FtsoPriceFinalizedIterator, error) {

	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.FilterLogs(opts, "PriceFinalized", epochIdRule)
	if err != nil {
		return nil, err
	}
	return &FtsoPriceFinalizedIterator{contract: _Ftso.contract, event: "PriceFinalized", logs: logs, sub: sub}, nil
}

// WatchPriceFinalized is a free log subscription operation binding the contract event 0xfe8865c1fe85bbf124b9e0f16cccfeeb6f330454fd79475a31261c8fa250bc30.
//
// Solidity: event PriceFinalized(uint256 indexed epochId, uint256 price, bool rewardedFtso, uint256 lowRewardPrice, uint256 highRewardPrice, uint8 finalizationType, uint256 timestamp)
func (_Ftso *FtsoFilterer) WatchPriceFinalized(opts *bind.WatchOpts, sink chan<- *FtsoPriceFinalized, epochId []*big.Int) (event.Subscription, error) {

	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.WatchLogs(opts, "PriceFinalized", epochIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FtsoPriceFinalized)
				if err := _Ftso.contract.UnpackLog(event, "PriceFinalized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePriceFinalized is a log parse operation binding the contract event 0xfe8865c1fe85bbf124b9e0f16cccfeeb6f330454fd79475a31261c8fa250bc30.
//
// Solidity: event PriceFinalized(uint256 indexed epochId, uint256 price, bool rewardedFtso, uint256 lowRewardPrice, uint256 highRewardPrice, uint8 finalizationType, uint256 timestamp)
func (_Ftso *FtsoFilterer) ParsePriceFinalized(log types.Log) (*FtsoPriceFinalized, error) {
	event := new(FtsoPriceFinalized)
	if err := _Ftso.contract.UnpackLog(event, "PriceFinalized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FtsoPriceHashSubmittedIterator is returned from FilterPriceHashSubmitted and is used to iterate over the raw logs and unpacked data for PriceHashSubmitted events raised by the Ftso contract.
type FtsoPriceHashSubmittedIterator struct {
	Event *FtsoPriceHashSubmitted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FtsoPriceHashSubmittedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FtsoPriceHashSubmitted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FtsoPriceHashSubmitted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FtsoPriceHashSubmittedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FtsoPriceHashSubmittedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FtsoPriceHashSubmitted represents a PriceHashSubmitted event raised by the Ftso contract.
type FtsoPriceHashSubmitted struct {
	Submitter common.Address
	EpochId   *big.Int
	Hash      [32]byte
	Timestamp *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterPriceHashSubmitted is a free log retrieval operation binding the contract event 0x615c0184a2b16dbbcd09eae0bf239e28977aa4e6ff2204eda59c14016310bb66.
//
// Solidity: event PriceHashSubmitted(address indexed submitter, uint256 indexed epochId, bytes32 hash, uint256 timestamp)
func (_Ftso *FtsoFilterer) FilterPriceHashSubmitted(opts *bind.FilterOpts, submitter []common.Address, epochId []*big.Int) (*FtsoPriceHashSubmittedIterator, error) {

	var submitterRule []interface{}
	for _, submitterItem := range submitter {
		submitterRule = append(submitterRule, submitterItem)
	}
	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.FilterLogs(opts, "PriceHashSubmitted", submitterRule, epochIdRule)
	if err != nil {
		return nil, err
	}
	return &FtsoPriceHashSubmittedIterator{contract: _Ftso.contract, event: "PriceHashSubmitted", logs: logs, sub: sub}, nil
}

// WatchPriceHashSubmitted is a free log subscription operation binding the contract event 0x615c0184a2b16dbbcd09eae0bf239e28977aa4e6ff2204eda59c14016310bb66.
//
// Solidity: event PriceHashSubmitted(address indexed submitter, uint256 indexed epochId, bytes32 hash, uint256 timestamp)
func (_Ftso *FtsoFilterer) WatchPriceHashSubmitted(opts *bind.WatchOpts, sink chan<- *FtsoPriceHashSubmitted, submitter []common.Address, epochId []*big.Int) (event.Subscription, error) {

	var submitterRule []interface{}
	for _, submitterItem := range submitter {
		submitterRule = append(submitterRule, submitterItem)
	}
	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.WatchLogs(opts, "PriceHashSubmitted", submitterRule, epochIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FtsoPriceHashSubmitted)
				if err := _Ftso.contract.UnpackLog(event, "PriceHashSubmitted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePriceHashSubmitted is a log parse operation binding the contract event 0x615c0184a2b16dbbcd09eae0bf239e28977aa4e6ff2204eda59c14016310bb66.
//
// Solidity: event PriceHashSubmitted(address indexed submitter, uint256 indexed epochId, bytes32 hash, uint256 timestamp)
func (_Ftso *FtsoFilterer) ParsePriceHashSubmitted(log types.Log) (*FtsoPriceHashSubmitted, error) {
	event := new(FtsoPriceHashSubmitted)
	if err := _Ftso.contract.UnpackLog(event, "PriceHashSubmitted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// FtsoPriceRevealedIterator is returned from FilterPriceRevealed and is used to iterate over the raw logs and unpacked data for PriceRevealed events raised by the Ftso contract.
type FtsoPriceRevealedIterator struct {
	Event *FtsoPriceRevealed // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *FtsoPriceRevealedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(FtsoPriceRevealed)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(FtsoPriceRevealed)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *FtsoPriceRevealedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *FtsoPriceRevealedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// FtsoPriceRevealed represents a PriceRevealed event raised by the Ftso contract.
type FtsoPriceRevealed struct {
	Voter          common.Address
	EpochId        *big.Int
	Price          *big.Int
	Random         *big.Int
	Timestamp      *big.Int
	VotePowerNat   *big.Int
	VotePowerAsset *big.Int
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterPriceRevealed is a free log retrieval operation binding the contract event 0x408bc8c9d02102257c33373c2df5771b03067bd8ea7ec60c35f314ec4ee99d05.
//
// Solidity: event PriceRevealed(address indexed voter, uint256 indexed epochId, uint256 price, uint256 random, uint256 timestamp, uint256 votePowerNat, uint256 votePowerAsset)
func (_Ftso *FtsoFilterer) FilterPriceRevealed(opts *bind.FilterOpts, voter []common.Address, epochId []*big.Int) (*FtsoPriceRevealedIterator, error) {

	var voterRule []interface{}
	for _, voterItem := range voter {
		voterRule = append(voterRule, voterItem)
	}
	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.FilterLogs(opts, "PriceRevealed", voterRule, epochIdRule)
	if err != nil {
		return nil, err
	}
	return &FtsoPriceRevealedIterator{contract: _Ftso.contract, event: "PriceRevealed", logs: logs, sub: sub}, nil
}

// WatchPriceRevealed is a free log subscription operation binding the contract event 0x408bc8c9d02102257c33373c2df5771b03067bd8ea7ec60c35f314ec4ee99d05.
//
// Solidity: event PriceRevealed(address indexed voter, uint256 indexed epochId, uint256 price, uint256 random, uint256 timestamp, uint256 votePowerNat, uint256 votePowerAsset)
func (_Ftso *FtsoFilterer) WatchPriceRevealed(opts *bind.WatchOpts, sink chan<- *FtsoPriceRevealed, voter []common.Address, epochId []*big.Int) (event.Subscription, error) {

	var voterRule []interface{}
	for _, voterItem := range voter {
		voterRule = append(voterRule, voterItem)
	}
	var epochIdRule []interface{}
	for _, epochIdItem := range epochId {
		epochIdRule = append(epochIdRule, epochIdItem)
	}

	logs, sub, err := _Ftso.contract.WatchLogs(opts, "PriceRevealed", voterRule, epochIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(FtsoPriceRevealed)
				if err := _Ftso.contract.UnpackLog(event, "PriceRevealed", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePriceRevealed is a log parse operation binding the contract event 0x408bc8c9d02102257c33373c2df5771b03067bd8ea7ec60c35f314ec4ee99d05.
//
// Solidity: event PriceRevealed(address indexed voter, uint256 indexed epochId, uint256 price, uint256 random, uint256 timestamp, uint256 votePowerNat, uint256 votePowerAsset)
func (_Ftso *FtsoFilterer) ParsePriceRevealed(log types.Log) (*FtsoPriceRevealed, error) {
	event := new(FtsoPriceRevealed)
	if err := _Ftso.contract.UnpackLog(event, "PriceRevealed", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
